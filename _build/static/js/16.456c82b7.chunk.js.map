{"version":3,"sources":["main/content/franchisees/transactions/filterPanel.js","main/content/franchisees/transactions/transactionLine.js","main/content/franchisees/transactions/transactionForm.js","main/content/franchisees/transactions/FranchiseeLists.js","main/content/franchisees/transactions/transactionsApp.js"],"names":["FilterPanel","state","checkedOpen","checkedCompleted","handleChange","name","event","_this","setState","Object","defineProperty","target","checked","props","toggleStatus","this","transactionStatus","prevProps","classes","react_default","a","createElement","className","classNames","root","index_es","style","marginTop","display","flexDirection","FormControlLabel_default","control","Switch_default","onChange","value","label","Component","withStyles","theme","_panel","panel","position","width","backgroundColor","palette","background","paper","boxShadow","shadows","top","height","minHeight","bottom","left","margin","zIndex","transform","overflow","breakpoints","down","&.opened","transitions","create","easing","easeInOut","duration","standard","connect","_ref","transactions","filterState","bOpenedTransactionFilterPanel","dispatch","bindActionCreators","Actions","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","green","dark","primary","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","message","alignItems","onClose","variant","other","objectWithoutProperties","Icon","assign","aria-describedby","id","action","key","aria-label","color","close","onClick","Close_default","counter","createData","type","arguments","length","undefined","frequency","description","quantity","amount","tax","markup","extended","total","TransactionTable","order","selected","data","page","labelWidth","openSnack","snackMessage","handleChangeBilling","n","newData","map","row","temp","handleClose","reason","addLineData","transactionForm","franchisee","concat","toConsumableArray","record","removeLineData","line","_","remove","franchisees","fid","parseFloat","handleChangeDesc","handleChangeTransactionLine","parseInt","isDisable","prevState","snapshot","updateTransactionLine","nextProps","JSON","stringify","objectSpread","_this2","tableWrapper","react_table_es","minRows","showPagination","getTheadThProps","rowInfo","column","instance","border","Header","fontFamily","fontWeight","lineHeight","borderRight","getTheadProps","tableTheadRow","getTdProps","justify-end","original","columns","accessor","Cell","selectRoot","formControl","marginBottom","outlined","billing","ev","input","MenuProps","dropdownMenu","tableTdEven","services","placeholder","fullWidth","InputLabelProps","shrink","InputProps","fInput","inputComponent","NumberFormatCustom1","NumberFormatCustom","NumberFormatCustomPercent","readOnly","toFixed","replace","lineButton","lineCancelButton","defaultPageSize","anchorOrigin","vertical","horizontal","open","autoHideDuration","React","_lineButton","_lineCancelButton","head","& .ReactTable .rt-thead.-headerGroups","& .ReactTable .rt-tbody","overflowY","overflowX","& .ReactTable .rt-tr-group","flex","& .ReactTable .rt-thead .rt-th:nth-child(1)","justifyContent","& .ReactTable .rt-thead .rt-th:last-child","& .franchiRow","& .f1","minWidth","padding","borderRadius","& .f2","marginLeft","InvoiceLineHeadRoot","& li","&:hover","distribution","& span","main","& input","textAlign","container","suggestionsContainerOpen","maxHeight","suggestion","suggestionsList","listStyleType","withRouter","auth","franchiseesDB","regionId","login","defaultRegionId","getCustomerTaxAmount","chance","Chance","newInvoiceState","MasterTrxTypeListId","RegionId","RegionName","InvoiceId","TransactionDate","Date","CustomerId","franchiseeNo","CustomerName","EBill","PrintInvoice","FranchiseeDescription","InvoiceAmount","InvoiceTax","InvoiceTotal","CPI","TransactionStatusListId","TransactionStatus","InvoiceBalanceAmount","InvoiceBalanceTax","InvoiceBalanceTotal","EBillText","PrintInvoiceText","IsOpen","ConsolidatedInvoice","ConsolidatedInvoiceId","ConsolidatedInvoiceNo","CreditId","Service","notes","renderSuggestion","query","isHighlighted","matches","match","Name","parts","parse","component","part","index","highlight","String","text","TransactionForm","suggestions","fSuggestions","selectedFranchisee","selectedWork","subTotal","InvoiceNo","PO_number","period","moment","taxExempt","bAlertNewTransaction","buttonOption","renderInputComponent","inputProps","_inputProps$inputRef","inputRef","ref","node","required","autoFocus","_ref2","newValue","method","toString","onSuggestionsFetchRequested","_ref3","getSuggestions","onSuggestionsClearRequested","getSuggestionValue","escapedValue","escapeRegexCharacters","trim","regex","RegExp","filter","f","test","getTotal","console","log","forEach","mk","qty","set","addNewInvoice","inv_no","guid","items","item","Inv_No","ServiceTypeListId","Description","Type","Frequency","LineNo","UnitPrice","Quantity","TaxRate","ExtendedPrice","Total","MarkUpTotal","Commission","CommissionTotal","ExtraWork","push","result","Apply_to","PeriodId","invoices","Notes","note","BillRunId","InvoiceDate","CreatedById","user","UserId","CreatedDate","SubTotal","MarkupAmountTotal","TaxTotal","GrandTotal","Status","SysCust","Items","addInvoice","validateNewTransaction","onSaveTransaction","onSaveAndAddMore","onSaveAndClose","closeComposeForm","onSubmitForApproval","closeEditTransactionForm","closeNewTransactionForm","handleDueDateChange","date","handleTransactionDateChange","storeInputReference","autosuggest","handleCloseNewInvoice","selectFranchisee","setTimeout","focus","_this3","_this$state","today","autosuggestProps","bReadonly","_fuse","animation","delay","material_ui_pickers_esm","utils","MomentUtils","xs","sm","md","dist_default","renderSuggestionsContainer","options","containerProps","square","children","format","input1","inputOrange","paddingLeft","GridContainer","GridItem","card","title","cardHeader","cardContent","Number","Address","Phone","textField","multiline","transactionLine","rows","summary","firstName","lastName","button","transactionForm_MySnackbarContentWrapper","aria-labelledby","layoutForm","textTransform","right","divider","secondary","paddingTop","paddingBottom","& h6","picker","withTheme","_ref4","newTransaction","selectCustomer","resetInvoiceForm","hexToRgb","hex","exec","r","g","b","TransactionsLists","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","s","selection","selectAll","selectedInvoice","alertOpen","keyToBeRemoved","toggleSelection","shift","keyIndex","indexOf","slice","isSelected","includes","handleOpen","removeSelectedTransaction","removeTransaction","fetchData","bind","assertThisInitialized","escFunction","document","addEventListener","removeEventListener","keyCode","pageSize","layoutTable","PaginationComponent","JanikingPagination","onFetchData","getTheadGroupProps","getTheadGroupThProps","getTrProps","e","handleOriginal","stopPropagation","sortable","filterAll","Tax","Fees","TotalTrxAmount","totalRecords","& .z-9999","& .-pageSizeOptions","& .openFilter","& .openSummary","& .p-12-impor","paddingRight","& .ReactTable .rt-noData","& .ReactTable.-highlight .rt-tbody .rt-tr:not(.-padRow):hover","& .ReactTable .rt-thead.-header","& .ReactTable .rt-thead.-headerGroups .rt-th:nth-child(2)","content","tableThEven","imageIcon","transactionsDB","toggleFilterPanel","TransactionsApp","selectedTransaction","search","val","d","FranchiseeNo","prop","onNewTransaction","openNewTransactionForm","getTransactions","rawData","temp0","Data","FranchiseeTransactions","all_temp","statusStrings","toLowerCase","uniq","bLoadedTransactions","bLoadedFranchisees","getFranchisees","fstatusId","fLocation","fLongitude","fLatitude","fSearchText","_this$props","bChanged","_this$props2","Region","FranchiseeList","_this$props3","Fragment","layoutRoot","header","layoutHeader","leftSidebar","layoutLeftSidebar","openFilter","sidebarHeader","layoutSidebarHeader","leftSidebarHeader","filteropen","marginBlockStart","xsDown","leftSidebarContent","filterPanel","sideButton","history","alert","src","alt","smDown","disabled","filterPanelButton","smUp","pageLayout","toggleLeftSidebar","elevation","disableUnderline","FranchiseeLists","transactions_transactionForm","onRef","bFranchiseesFetchStart","overlay","progress","light","statusId","Location","Longitude","Latitude","SearchText","openEditTransactionForm"],"mappings":"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","file":"static/js/16.456c82b7.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Paper, withStyles} from '@material-ui/core';\r\n\r\n//Material UI core\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport * as Actions from 'store/actions';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nconst styles = theme => ({\r\n    root : {\r\n    },\r\n    panel: {\r\n        position                      : 'absolute',\r\n        width                         : 300,\r\n        backgroundColor               : theme.palette.background.paper,\r\n        boxShadow                     : theme.shadows[3],\r\n        top                           : 0,\r\n        height                        : '100%',\r\n        minHeight                     : '100%',\r\n        bottom                        : 0,\r\n        left                         :  -300,\r\n        margin                        : 0,\r\n        zIndex                        : 1000,\r\n        transform                     : 'translate3d(50px,0,0)',\r\n        overflow                      : 'hidden',\r\n        [theme.breakpoints.down('md')]: {\r\n            transform : 'translate3d(360px,0,0)',\r\n            boxShadow : 'none',\r\n            '&.opened': {\r\n                boxShadow: theme.shadows[5]\r\n            }\r\n        },\r\n        transition  : theme.transitions.create(['transform'], {\r\n            easing  : theme.transitions.easing.easeInOut,\r\n            duration: theme.transitions.duration.standard\r\n        }),\r\n        '&.opened1'                    : {\r\n            transform: 'translateX(300px)'\r\n        }\r\n    }\r\n});\r\n\r\nclass FilterPanel extends Component {\r\n\r\n    state = {\r\n        checkedOpen: true,\r\n        checkedCompleted: true,\r\n    };\r\n\r\n    componentDidMount()\r\n    {\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({\r\n            checkedOpen: this.props.transactionStatus.checkedOpen,\r\n            checkedCompleted: this.props.transactionStatus.checkedCompleted,\r\n            });\r\n    }\r\n\r\n    componentDidUpdate(prevProps)\r\n    {\r\n    }\r\n\r\n    componentWillUnmount()\r\n    {\r\n\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({ [name]: event.target.checked });\r\n        this.props.toggleStatus(name, event.target.checked)\r\n    };\r\n\r\n    render()\r\n    {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div className={classNames(classes.root)}>\r\n                <div className={classNames(\"flex flex-col\")}>\r\n                    <Paper className=\"flex flex-1 flex-col min-h-px p-20\">\r\n\r\n                        <div style={{marginTop: 50, display: 'flex', flexDirection: 'column'}}>\r\n                            <h3>Transaction Status</h3>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Switch\r\n                                        checked={this.state.checkedOpen}\r\n                                        onChange={this.handleChange('checkedOpen')}\r\n                                        value=\"checkedOpen\"\r\n                                    />\r\n                                }\r\n                                label=\"Open\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Switch\r\n                                        checked={this.state.checkedCompleted}\r\n                                        onChange={this.handleChange('checkedCompleted')}\r\n                                        value=\"checkedCompleted\"\r\n                                    />\r\n                                }\r\n                                label=\"Completed\"\r\n                            />\r\n                        </div>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch)\r\n{\r\n    return bindActionCreators({\r\n        toggleStatus: Actions.toggleTransactionStatus\r\n    }, dispatch);\r\n}\r\n\r\nfunction mapStateToProps({transactions})\r\n{\r\n    return {\r\n        filterState: transactions.bOpenedTransactionFilterPanel,\r\n        transactionStatus: transactions.transactionStatus\r\n    }\r\n}\r\n\r\nexport default (withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(FilterPanel)));\r\n","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n//Material UI core and icons\r\nimport {\r\n    Snackbar, SnackbarContent, TextField,\r\n    Paper, Icon, IconButton, Select, OutlinedInput, MenuItem, FormControl, Fab\r\n} from '@material-ui/core'\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\n// third party\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\n\r\n//Store\r\nimport {bindActionCreators} from \"redux\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport * as Actions from '../../../../store/actions';\r\n\r\n\r\n//Utility\r\nimport {NumberFormatCustom, NumberFormatCustom1, NumberFormatCustomPercent} from '../../../../services/utils'\r\n\r\n\r\n//Snackbar\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\nconst styles1 = theme => ({\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing.unit,\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n    const { classes, className, message, onClose, variant, ...other } = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={classNames(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    className={classes.close}\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon className={classes.icon} />\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\r\n\r\nlet counter = 0;\r\n\r\nfunction createData(type='Regular Billing', frequency='Adjust-Balance', description='', quantity='', amount='', tax=0, markup='', extended=0, total=0)\r\n{\r\n    return {\r\n        id: counter++,\r\n        type,\r\n        frequency,\r\n        description,\r\n        quantity,\r\n        amount,\r\n        tax,\r\n        markup,\r\n        extended,\r\n        total,\r\n    };\r\n}\r\n\r\nconst styles = theme => ({\r\n    root        : {\r\n        width    : '100%',\r\n        marginTop: theme.spacing.unit,\r\n        head: {\r\n            color: 'black',\r\n        },\r\n        '& .ReactTable .rt-thead.-headerGroups': {\r\n            display: 'none'\r\n        },\r\n        '& .ReactTable .rt-tbody': {\r\n            overflowY: 'scroll',\r\n            overflowX: 'hidden'\r\n        },\r\n        '& .ReactTable .rt-tr-group':{\r\n            flex: '0 0 auto'\r\n        },\r\n        '& .ReactTable .rt-thead .rt-th:nth-child(1)': {\r\n            justifyContent: 'center'\r\n        },\r\n        '& .ReactTable .rt-thead .rt-th:last-child': {\r\n            justifyContent: 'flex-end'\r\n        },\r\n        '& .franchiRow': {\r\n            '& .f1': {\r\n                width: '25%',\r\n                minWidth: 100,\r\n                padding: 10,\r\n                border: '1px solid lightgray',\r\n                borderRadius: 6\r\n            },\r\n            '& .f2': {\r\n                width: '75%',\r\n                padding: '4px 8px',\r\n                border: '0px solid lightgray',\r\n                borderRadius: 6,\r\n                marginLeft: 10\r\n            }\r\n        },\r\n        InvoiceLineHeadRoot:{\r\n            backgroundColor: 'lightgray',\r\n        },\r\n        selectRoot:{\r\n            backgroundColor: 'green'\r\n        }\r\n    },\r\n    outlined: {\r\n        padding: \"6px 24px 6px 12px!important\"\r\n    },\r\n    billing:{\r\n        width: 170,\r\n        fontSize: '1.3rem'\r\n    },\r\n    services:{\r\n        width: 180,\r\n        fontSize: '1.3rem'\r\n    },\r\n    dropdownMenu:{\r\n        '& li':{\r\n            fontSize: 12,\r\n            height: 12,\r\n        }\r\n    },\r\n    lineButton: {\r\n        width: 24,\r\n        height: 24,\r\n        minHeight: 24,\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: 24,\r\n            height: 24,\r\n            minHeight: 24,\r\n        },\r\n        '& .material-icons':{\r\n            fontSize: 16\r\n        }\r\n    },\r\n    lineCancelButton:{\r\n        width: 24,\r\n        height: 24,\r\n        minHeight: 24,\r\n        backgroundColor: '#ff4850',\r\n        color: 'white',\r\n        '&:hover':{\r\n            backgroundColor: '#ff2a32',\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: 24,\r\n            height: 24,\r\n            minHeight: 24,\r\n            padding: 0\r\n        },\r\n        '& .material-icons':{\r\n            fontSize: 16\r\n        }\r\n    },\r\n    distribution: {\r\n        '& span': {\r\n            backgroundColor: 'lightgrey',\r\n            padding: '8px 12px',\r\n            borderRadius: 20\r\n        }\r\n    },\r\n    tableTheadRow:{\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    input: {\r\n        fontSize: 13\r\n    },\r\n    fInput: {\r\n        width: '96%',\r\n        marginLeft: 15,\r\n        '& input': {\r\n            fontSize: 13,\r\n            textAlign: 'right',\r\n        }\r\n    },\r\n    container: {\r\n        position: 'relative',\r\n        width: '100%'\r\n    },\r\n    suggestionsContainerOpen: {\r\n        position: 'fixed',\r\n        zIndex: 100,\r\n        marginTop: theme.spacing.unit,\r\n        maxHeight: 200,\r\n        overflowY: 'scroll',\r\n        backgroundColor: 'white',\r\n        borderRadius: 6,\r\n        border: '1px solid lightgray'\r\n    },\r\n    suggestion: {\r\n        display: 'block',\r\n    },\r\n    suggestionsList: {\r\n        margin: 0,\r\n        padding: 0,\r\n        listStyleType: 'none',\r\n    },\r\n});\r\n\r\nclass TransactionTable extends React.Component {\r\n    state = {\r\n        order      : 'asc',\r\n        selected   : [],\r\n        data       : [\r\n            createData(\"Regular Billing\", \"Adjust-Balance\", '',''),\r\n        ],\r\n        page       : 0,\r\n        labelWidth: 0,\r\n        openSnack: false,\r\n        snackMessage: 'Please fill the data',\r\n    };\r\n\r\n    handleChangeBilling = (event, n) => {\r\n        let newData = this.state.data.map(row=>{\r\n            let temp = row;\r\n            if(n.id===row.id){\r\n                temp[event.target.name] = event.target.value\r\n            }\r\n            return temp;\r\n        });\r\n\r\n        this.setState({data: newData})\r\n    };\r\n\r\n    componentDidMount(){\r\n\r\n        let id = 0;\r\n        const data = [...this.state.data];\r\n        let newData = data.map(record=>{\r\n            record.id = id++;\r\n            return record;\r\n        });\r\n        this.setState({data: newData})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        if(this.state.data!==null && prevState.data!==this.state.data){\r\n            this.props.updateTransactionLine(this.state.data);\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.transactionForm.data===null && JSON.stringify(nextProps.transactionForm.data)!==JSON.stringify(this.props.transactionForm.data)){\r\n            let newData = createData(\"Regular Billing\", \"Adjust-Balance\", '','');\r\n            this.setState({data: [{...newData, id: 0}]});\r\n        }\r\n    }\r\n\r\n    handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        this.setState({ openSnack: false });\r\n    };\r\n\r\n    addLineData=(row)=>{\r\n        if(this.props.transactionForm.franchisee===null) {\r\n            this.setState({snackMessage: 'Please choose customer from Franchisee suggestion'});\r\n            this.setState({openSnack: true});\r\n            return;\r\n        }\r\n\r\n        if(row.description==='') {\r\n            this.setState({snackMessage: 'Please enter description'});\r\n            this.setState({openSnack: true});\r\n            return;\r\n        }\r\n\r\n        if(row.quantity==='') {\r\n            this.setState({snackMessage: 'Please enter quantity'});\r\n            this.setState({openSnack: true});\r\n            return;\r\n        }\r\n\r\n        if(row.amount==='') {\r\n            this.setState({snackMessage: 'Please enter amount'});\r\n            this.setState({openSnack: true});\r\n            return;\r\n        }\r\n\r\n        const data = [...this.state.data, createData()];\r\n        let id = 0;\r\n        let newData = data.map(record=>{\r\n            record.id = id++;\r\n            return record;\r\n        });\r\n        this.setState({data: newData})\r\n    };\r\n\r\n    removeLineData=(line)=>{\r\n        const data = [...this.state.data];\r\n        _.remove(data, function (row) {\r\n            return row.id === line.id;\r\n        });\r\n        let id = 0;\r\n        let newData = data.map(record=>{\r\n            record.id = id++;\r\n            return record;\r\n        });\r\n\r\n        this.setState({data: newData})\r\n    };\r\n\r\n    handleChange = row => event => {\r\n        const data = [...this.state.data];\r\n        data[row.id].franchisees[row.fid].amount = parseFloat(event.target.value);\r\n        this.setState({data: data});\r\n    };\r\n\r\n    handleChangeDesc = row => event => {\r\n        const data = [...this.state.data];\r\n        data[row.id].description = event.target.value;\r\n        this.setState({data: data});\r\n    };\r\n\r\n    handleChangeTransactionLine = (row, name) => event => {\r\n        const data = [...this.state.data];\r\n        data[row.id][name] = name==='quantity' ? parseInt(event.target.value) : parseFloat(event.target.value);\r\n\r\n        if(!this.isDisable(row))\r\n            data[row.id]['extended'] = data[row.id].quantity * data[row.id].amount;\r\n\r\n        this.setState({data: data});\r\n    };\r\n\r\n    isDisable = row =>{\r\n        if(this.props.transactionForm.franchisee ===null) {\r\n            this.setState({snackMessage: 'Please choose franchisee from suggestion'});\r\n            this.setState({openSnack: true});\r\n            return true;\r\n        }\r\n        if(row.quantity==='') return true;\r\n        if(row.amount==='') return true;\r\n    };\r\n\r\n    render()\r\n    {\r\n        const {classes} = this.props;\r\n        const {data} = this.state;\r\n\r\n        return (\r\n            <Paper className={classNames(classes.root)}>\r\n                <div className={classNames(classes.tableWrapper, \"flex flex-col h-full\")}>\r\n                    <ReactTable\r\n                        data={data}\r\n                        minRows = {0}\r\n                        showPagination ={false}\r\n                        getTheadThProps={(state, rowInfo, column, instance) =>{\r\n                            let border = '1px solid rgba(255,255,255,.6)';\r\n                            if(column.Header==='Action') border = 'none';\r\n\r\n                            return {\r\n                                style:{\r\n                                    fontSize: 13,\r\n                                    fontFamily: 'Muli,Roboto,\"Helvetica\",Arial,sans-serif',\r\n                                    fontWeight: 400,\r\n                                    lineHeight: 2.0,\r\n                                    color: 'white',\r\n                                    borderRight: border\r\n                                },\r\n                            }\r\n                        }}\r\n                        getTheadProps={(state, rowInfo, column, instance) =>{\r\n                            return {\r\n                                style:{\r\n                                    fontSize: 13,\r\n                                },\r\n                                className: classes.tableTheadRow\r\n                            }\r\n                        }}\r\n                        getTdProps={(state, rowInfo, column, instance) =>{\r\n                                return {\r\n                                    className: classNames(\r\n                                        {\"justify-end\": column.id==='extended'},\r\n                                        {\"justify-end\": rowInfo.original.type!=='line'})\r\n                                }\r\n                        }}\r\n                        columns={[\r\n                            {\r\n                                columns: [\r\n                                    {\r\n                                        Header: \"Type\",\r\n                                        accessor: \"type\",\r\n                                        Cell: row=>{\r\n                                            return (\r\n                                                <FormControl variant=\"outlined\" className={classNames(classes.selectRoot, classes.formControl)} style={{marginBottom: '0!important',}}>\r\n                                                    <Select\r\n                                                        classes={{\r\n                                                            outlined: classNames(classes.outlined, classes.billing),\r\n                                                        }}\r\n                                                        value={row.original.type}\r\n                                                        onChange={(ev)=>this.handleChangeBilling(ev, row.original)}\r\n                                                        input={\r\n                                                            <OutlinedInput\r\n                                                                labelWidth={this.state.labelWidth}\r\n                                                                name=\"type\"\r\n                                                                id=\"type\"\r\n                                                            />\r\n                                                        }\r\n                                                        MenuProps = {{\r\n                                                            classes:{paper: classes.dropdownMenu},\r\n                                                        }}\r\n                                                    >\r\n                                                        <MenuItem value=\"\">\r\n                                                            <em>Select</em>\r\n                                                        </MenuItem>\r\n                                                        <MenuItem value=\"Regular Billing\">Regular Billing</MenuItem>\r\n                                                        <MenuItem value=\"Additional Billing Office\">Additional Billing Office</MenuItem>\r\n                                                        <MenuItem value=\"Extra Work\">Extra Work</MenuItem>\r\n                                                        <MenuItem value=\"Client Supplies\">Client Supplies</MenuItem>\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            );\r\n                                        },\r\n                                        width: 180,\r\n                                        className: classNames(classes.tableTdEven, \"flex items-center  justify-center\"),\r\n                                    },\r\n                                    {\r\n                                        Header: \"Frequency\",\r\n                                        accessor: \"frequency\",\r\n                                        Cell: row=>{\r\n                                            return (\r\n                                                <FormControl variant=\"outlined\" className={classes.formControl} style={{marginBottom: '0!important'}}>\r\n                                                    <Select\r\n                                                        classes={{\r\n                                                            outlined: classNames(classes.outlined,classes.services)\r\n                                                        }}\r\n                                                        value={row.original.frequency}\r\n                                                        onChange={(ev)=>this.handleChangeBilling(ev, row.original)}\r\n                                                        input={\r\n                                                            <OutlinedInput\r\n                                                                labelWidth={this.state.labelWidth}\r\n                                                                name=\"frequency\"\r\n                                                                id=\"frequency\"\r\n                                                            />\r\n                                                        }\r\n                                                        MenuProps = {{\r\n                                                            classes:{paper: classes.dropdownMenu},\r\n                                                        }}\r\n                                                    >\r\n                                                        <MenuItem value=\"\">\r\n                                                            <em>Select</em>\r\n                                                        </MenuItem>\r\n                                                        <MenuItem value=\"Adjust-Balance\">Adjust - Balance</MenuItem>\r\n                                                        <MenuItem value=\"Adjust-Refund\">Adjust - Refund</MenuItem>\r\n                                                        <MenuItem value=\"Adjust-WriteOff\">Adjust - WriteOff</MenuItem>\r\n                                                        <MenuItem value=\"Buffing\">Buffing</MenuItem>\r\n                                                        <MenuItem value=\"Carpet Clean\">Carpet Clean</MenuItem>\r\n                                                        <MenuItem value=\"Customer Suppliers\">Customer Suppliers</MenuItem>\r\n                                                        <MenuItem value=\"Emergency Clean\">Emergency Clean</MenuItem>\r\n                                                        <MenuItem value=\"Event Center\">Event Center</MenuItem>\r\n                                                        <MenuItem value=\"Floor Services\">Floor Services</MenuItem>\r\n                                                        <MenuItem value=\"Furniture Cleaning Service\">Furniture Cleaning Service</MenuItem>\r\n                                                        <MenuItem value=\"High Dusting\">High Dusting</MenuItem>\r\n                                                        <MenuItem value=\"Hotel\">Hotel</MenuItem>\r\n                                                        <MenuItem value=\"In-House Work\">In-House Work</MenuItem>\r\n                                                        <MenuItem value=\"Initial and Deep Clean\">Initial and Deep Clean</MenuItem>\r\n                                                        <MenuItem value=\"Initial One-Time Clean\">Initial One-Time Clean</MenuItem>\r\n                                                        <MenuItem value=\"Make Ready\">Make Ready</MenuItem>\r\n                                                        <MenuItem value=\"Miscellaneous - Special\">Miscellaneous - Special</MenuItem>\r\n                                                        <MenuItem value=\"Other\">Other</MenuItem>\r\n                                                        <MenuItem value=\"Porter Services\">Porter Services</MenuItem>\r\n                                                        <MenuItem value=\"Power Washing\">Power Washing</MenuItem>\r\n                                                        <MenuItem value=\"Regular Billing\">Regular Billing</MenuItem>\r\n                                                        <MenuItem value=\"Regular Cleaning - Day\">Regular Cleaning - Day</MenuItem>\r\n                                                        <MenuItem value=\"Regular Cleaning - Night\">Regular Cleaning - Night</MenuItem>\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            );\r\n                                        },\r\n                                        width: 180,\r\n                                        className: classNames(classes.tableTdEven, \"flex items-center\"),\r\n                                    },\r\n                                    {\r\n                                        Header: \"Description\",\r\n                                        accessor: \"description\",\r\n                                        Cell: row=>{\r\n                                            return (\r\n                                                <TextField\r\n                                                    id=\"description\"\r\n                                                    style={{ margin: 0 }}\r\n                                                    placeholder=\"Description\"\r\n                                                    fullWidth\r\n                                                    value={row.original.description}\r\n                                                    onChange={this.handleChangeDesc(row.original)}\r\n                                                    margin=\"normal\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                    InputProps={{\r\n                                                        classes: {\r\n                                                            input: classes.input,\r\n                                                        },\r\n                                                    }}\r\n                                                />\r\n                                            )\r\n                                        },\r\n                                    },\r\n                                    {\r\n                                        Header: \"Qty\",\r\n                                        accessor: \"quantity\",\r\n                                        Cell: row=>{\r\n                                            return <TextField\r\n                                                className={classes.fInput}\r\n                                                placeholder=\"Qty\"\r\n                                                value={row.original.quantity}\r\n                                                onChange={this.handleChangeTransactionLine(row.original, 'quantity')}\r\n                                                InputProps={{\r\n                                                    inputComponent: NumberFormatCustom1,\r\n                                                    classes: {\r\n                                                        input: classes.input,\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                        },\r\n                                        className: classNames(classes.tableTdEven, \"flex items-center  justify-center text-center\"),\r\n                                        width: 60\r\n                                    },\r\n                                    {\r\n                                        Header: \"Amount\",\r\n                                        accessor: \"amount\",\r\n                                        Cell: row=>{\r\n                                            return <TextField\r\n                                                className={classes.fInput}\r\n                                                placeholder=\"Amount\"\r\n                                                value={row.original.amount}\r\n                                                onChange={this.handleChangeTransactionLine(row.original, 'amount')}\r\n                                                InputProps={{\r\n                                                    inputComponent: NumberFormatCustom,\r\n                                                    classes: {\r\n                                                        input: classes.input,\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                        },\r\n                                        className: classNames(classes.tableTdEven, \"flex items-center  justify-center text-right\"),\r\n                                        width: 100\r\n                                    },\r\n                                    {\r\n                                        Header: \"Tax\",\r\n                                        accessor: \"tax\",\r\n                                        Cell: row=>{\r\n                                            return <TextField\r\n                                                className={classes.fInput}\r\n                                                placeholder=\"Tax\"\r\n                                                value={row.original.tax}\r\n                                                onChange={this.handleChangeTransactionLine(row.original, 'tax')}\r\n                                                InputProps={{\r\n                                                    inputComponent: NumberFormatCustom,\r\n                                                    classes: {\r\n                                                        input: classes.input,\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                        },\r\n                                        className: classNames(classes.tableTdEven, \"flex items-center  justify-end text-right\"),\r\n                                        width: 80\r\n                                    },\r\n                                    {\r\n                                        Header: \"Markup(%)\",\r\n                                        accessor: \"markup\",\r\n                                        Cell: row=>{\r\n                                            return <TextField\r\n                                                className={classes.fInput}\r\n                                                placeholder=\"Markup\"\r\n                                                value={row.original.markup}\r\n                                                onChange={this.handleChangeTransactionLine(row.original, 'markup')}\r\n                                                InputProps={{\r\n                                                    inputComponent: NumberFormatCustomPercent,\r\n                                                    readOnly: row.original.billing!==\"Client Supplies\",\r\n                                                    classes: {\r\n                                                        input: classes.input,\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                        },\r\n                                        className: classNames(classes.tableTdEven, \"flex items-center  text-right justify-end\"),\r\n                                        width: 80\r\n                                    },\r\n                                    {\r\n                                        Header: \"Ext. Amount\",\r\n                                        accessor: \"extended\",\r\n                                        Cell: row=>{\r\n                                            let markup = 0.0;\r\n                                            if(row.original.markup!=='') markup = row.original.markup;\r\n                                            return (\"$\" + parseFloat(row.original.extended * (1 + parseFloat(markup) / 100)).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,'));\r\n                                        },\r\n                                        className: classNames(classes.tableTdEven, \"flex items-center  w-full text-center pr-12\"),\r\n                                        width: 100\r\n                                    },\r\n                                    {\r\n                                        Header: \"Action\",\r\n                                        width: 130,\r\n                                        Cell: row=>{\r\n                                                return (\r\n                                                    <div className=\"flex flex-row items-center w-full justify-center\">\r\n                                                        <Fab color=\"secondary\" aria-label=\"add\"\r\n                                                             className={classNames(classes.lineButton, \"mr-8\")}\r\n                                                             onClick={()=>this.addLineData(row.original)}\r\n                                                        >\r\n                                                            <Icon>add</Icon>\r\n                                                        </Fab>\r\n                                                        {this.state.data.length>1 && (\r\n                                                            <Fab aria-label=\"remove\"\r\n                                                                 onClick={()=>this.removeLineData(row.original)}\r\n                                                                 className={classNames(classes.lineCancelButton, \"mr-0\")}>\r\n                                                                <Icon>close</Icon>\r\n                                                            </Fab>\r\n                                                        )}\r\n                                                    </div>\r\n                                                );\r\n                                        }\r\n                                    },\r\n                                ]\r\n                            }\r\n                        ]}\r\n                        className={classNames( \"-striped -highlight\")}\r\n                        defaultPageSize={200}\r\n                        style={{\r\n                            height: '100%',\r\n                        }}\r\n                    />\r\n                </div>\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    open={this.state.openSnack}\r\n                    autoHideDuration={3000}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <MySnackbarContentWrapper\r\n                        onClose={this.handleClose}\r\n                        variant=\"error\"\r\n                        message={this.state.snackMessage}\r\n                    />\r\n                </Snackbar>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nTransactionTable.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch)\r\n{\r\n    return bindActionCreators({\r\n        getCustomerTaxAmount: Actions.getCustomerTaxAmount,\r\n        updateTransactionLine: Actions.updateTransactionLine\r\n    }, dispatch);\r\n}\r\n\r\nfunction mapStateToProps({franchisees, auth, transactions})\r\n{\r\n    return {\r\n        transactionForm: transactions.transactionForm,\r\n        franchisees: franchisees.franchiseesDB,\r\n        regionId: auth.login.defaultRegionId,\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withRouter(connect(mapStateToProps, mapDispatchToProps)(TransactionTable)));\r\n","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n// core components\r\nimport {\r\n    Paper, TextField, Typography, MenuItem, Card, CardHeader, CardContent, Divider, Button, Snackbar, SnackbarContent,\r\n    IconButton, Icon, Grid, DialogTitle, DialogContent, DialogContentText, DialogActions, Dialog\r\n} from '@material-ui/core';\r\nimport 'date-fns'\r\nimport MomentUtils from '@date-io/moment';\r\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\n\r\n// theme components\r\nimport {FuseAnimate} from '@fuse';\r\nimport {withStyles} from \"@material-ui/core\";\r\n\r\n//Custom components\r\nimport GridContainer from \"Commons/Grid/GridContainer\";\r\nimport GridItem from \"Commons/Grid/GridItem\";\r\nimport TransactionTable from \"./transactionLine\"\r\n\r\n// for store\r\nimport {bindActionCreators} from \"redux\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport * as Actions from '../../../../store/actions';\r\n\r\n// third party\r\nimport \"react-table/react-table.css\";\r\nimport _ from 'lodash';\r\nimport Chance from 'chance'\r\nimport Autosuggest from 'react-autosuggest';\r\nimport classNames from 'classnames';\r\nimport match from \"autosuggest-highlight/match\";\r\nimport parse from \"autosuggest-highlight/parse\";\r\nimport moment from 'moment'\r\nimport PropTypes from 'prop-types';\r\n\r\n//Utility\r\nimport {escapeRegexCharacters} from 'services/utils'\r\n\r\nconst styles = theme => ({\r\n    layoutForm: {\r\n        flexDirection: 'row',\r\n    },\r\n    button: {\r\n        '& span': {\r\n            textTransform: 'none'\r\n        }\r\n    },\r\n    card: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        position: 'relative',\r\n        width: '100%'\r\n    },\r\n    formControl: {\r\n        marginBottom: 12,\r\n        minWidth: 200,\r\n    },\r\n    textField: {\r\n        marginLeft: 0,\r\n        marginRight: theme.spacing.unit,\r\n    },\r\n    summary: {\r\n        fontSize: 15,\r\n        fontWeight: 700\r\n    },\r\n    suggestionsContainerOpen: {\r\n        position: 'absolute',\r\n        zIndex: 10,\r\n        marginTop: theme.spacing.unit,\r\n        left: 0,\r\n        right: 0,\r\n        maxHeight: 200,\r\n        overflowY: 'scroll'\r\n    },\r\n    suggestion: {\r\n        display: 'block',\r\n    },\r\n    suggestionsList: {\r\n        margin: 0,\r\n        padding: 0,\r\n        listStyleType: 'none',\r\n    },\r\n    divider: {\r\n        height: theme.spacing.unit * 2,\r\n    },\r\n    cardHeader: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        padding: '8px 24px',\r\n        '& span': {\r\n            color: 'white',\r\n            fontSize: 16,\r\n        }\r\n    },\r\n    cardContent: {\r\n        paddingTop: 12,\r\n        paddingBottom: '12px!important',\r\n        '& h6': {\r\n            lineHeight: 1.6,\r\n            fontSize: 14\r\n        }\r\n    },\r\n    input: {\r\n        padding: '12px 14px'\r\n    },\r\n    input1: {\r\n        padding: '12px 6px'\r\n    },\r\n\r\n    label: {\r\n        transform: 'translate(14px, 14px) scale(1)'\r\n    },\r\n    inputOrange: {\r\n        padding: '12px 14px',\r\n        color: 'orange'\r\n    },\r\n    dropdownMenu: {\r\n        '& li': {\r\n            fontSize: 12,\r\n            height: 12,\r\n        }\r\n    },\r\n    picker: {\r\n        padding: '0 6px'\r\n    }\r\n})\r\n\r\nconst chance = new Chance();\r\n\r\nconst newInvoiceState = {\r\n    \"MasterTrxTypeListId\": \"\",\r\n    \"RegionId\": \"\",\r\n    \"RegionName\": \"\",\r\n    \"InvoiceId\": \"\",\r\n    \"TransactionDate\": new Date(),\r\n    \"Date\": new Date(),\r\n    \"CustomerId\": \"\",\r\n    \"franchiseeNo\": \"\",\r\n    \"CustomerName\": \"\",\r\n    \"EBill\": \"\",\r\n    \"PrintInvoice\": \"\",\r\n    \"FranchiseeDescription\": \"\",\r\n    \"InvoiceAmount\": \"\",\r\n    \"InvoiceTax\": \"\",\r\n    \"InvoiceTotal\": \"\",\r\n    \"CPI\": \"\",\r\n    \"TransactionStatusListId\": \"\",\r\n    \"TransactionStatus\": \"\",\r\n    \"InvoiceBalanceAmount\": \"\",\r\n    \"InvoiceBalanceTax\": \"\",\r\n    \"InvoiceBalanceTotal\": \"\",\r\n    \"EBillText\": \"\",\r\n    \"PrintInvoiceText\": \"\",\r\n    \"IsOpen\": \"\",\r\n    \"ConsolidatedInvoice\": \"\",\r\n    \"ConsolidatedInvoiceId\": \"\",\r\n    \"ConsolidatedInvoiceNo\": \"\",\r\n    \"CreditId\": \"\",\r\n    \"Service\":\"\",\r\n    \"notes\": \"\"\r\n};\r\n\r\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\r\n    const matches = match(suggestion.Name, query);\r\n    const parts = parse(suggestion.Name, matches);\r\n\r\n    return (\r\n        <MenuItem selected={isHighlighted} component=\"div\">\r\n            <div>\r\n                {parts.map((part, index) => {\r\n                    return part.highlight ? (\r\n                        <span key={String(index)} style={{ fontWeight: 700 }}>\r\n              {part.text}\r\n            </span>\r\n                    ) : (\r\n                        <strong key={String(index)} style={{ fontWeight: 300 }}>\r\n                            {part.text}\r\n                        </strong>\r\n                    );\r\n                })}\r\n            </div>\r\n        </MenuItem>\r\n    );\r\n}\r\n\r\n//Snackbar\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\nconst styles1 = theme => ({\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing.unit,\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n    const { classes, className, message, onClose, variant, ...other } = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={classNames(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    className={classes.close}\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon className={classes.icon} />\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\r\n\r\n\r\nclass TransactionForm extends Component {\r\n    state = {\r\n        franchisees: [],\r\n        ...newInvoiceState,\r\n        value: '',\r\n        suggestions: [],\r\n        fSuggestions: [],\r\n        selectedFranchisee: null,\r\n        labelWidth: 0,\r\n        selectedWork: \"\",\r\n        total: 0.0,\r\n        subTotal: 0.0,\r\n        tax: 0,\r\n        markup: 0.0,\r\n        InvoiceNo: \"\",\r\n        snackMessage: \"\",\r\n        openSnack: false,\r\n        PO_number: '',\r\n        period: moment(),\r\n        taxExempt: false,\r\n        bAlertNewTransaction: false,\r\n        buttonOption: 0, //0-save and add more, 1- save & close 2- submit for approval\r\n    };\r\n\r\n    renderInputComponent = (inputProps ) => {\r\n        const { classes, inputRef = () => {}, ref, ...other } = inputProps ;\r\n\r\n        return (\r\n            <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                label=\"Franchisee:\"\r\n                InputProps={{\r\n                    inputRef: node => {\r\n                        ref(node);\r\n                        inputRef(node);\r\n                    },\r\n                    classes: {\r\n                        input: classes.input,\r\n                    },\r\n                }}\r\n                InputLabelProps = {{\r\n                    classes: {outlined: classes.label}\r\n                }}\r\n                required\r\n                {...other}\r\n                autoFocus={true}\r\n            />\r\n        );\r\n    };\r\n\r\n    onChange = (event, { newValue, method }) => {\r\n        this.setState({\r\n            value: newValue.toString()\r\n        });\r\n    };\r\n\r\n    onSuggestionsFetchRequested = ({ value }) => {\r\n        this.setState({\r\n            suggestions: this.getSuggestions(value)\r\n        });\r\n    };\r\n\r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n            suggestions: []\r\n        });\r\n    };\r\n\r\n    getSuggestionValue =  (suggestion) =>{\r\n        this.setState({selectedFranchisee: suggestion});\r\n        this.setState({PO_number: suggestion.franchiseeNo});\r\n        return suggestion.Name;\r\n    };\r\n\r\n    getSuggestions = (value) => {\r\n        const escapedValue = escapeRegexCharacters(value.trim());\r\n        const regex = new RegExp(escapedValue, 'i');\r\n        if(this.props.franchisees!==null)\r\n            return this.props.franchisees.filter(f => regex.test(f.Name));\r\n    };\r\n\r\n    getTotal = () => {\r\n        let subTotal = 0.0;\r\n        let markup = 0.0;\r\n        let tax = 0.0;\r\n\r\n        if(this.props.transactionForm.data===null) return;\r\n\r\n        const data = [...this.props.transactionForm.data.line];\r\n        console.log('line=', this.props.transactionForm.data.line);\r\n        data.forEach(n => {\r\n            let mk = 0.;\r\n            let qty = 0;\r\n            if(n.quantity!=='') qty = n.quantity;\r\n            if(n.markup!=='') mk = n.markup;\r\n            subTotal += parseFloat(n.extended);\r\n            tax += parseFloat(n.tax);\r\n            markup += parseFloat(n.extended*qty*parseFloat(mk)/100);\r\n        });\r\n\r\n        console.log('aaaaa', subTotal, markup, tax, subTotal+tax+markup);\r\n\r\n        this.setState({subTotal: subTotal});\r\n        this.setState({markup: markup});\r\n        this.setState({tax: tax});\r\n        this.setState({total: subTotal+tax+markup});\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        if(this.props.transactionForm!== prevProps.transactionForm) {\r\n            console.log('pppppp');\r\n            this.getTotal();\r\n        }\r\n        if(this.state.selectedFranchisee!== null && JSON.stringify(this.state.selectedFranchisee)!== JSON.stringify(this.props.transactionForm.franchisee)) {\r\n            this.props.selectFranchisee(this.state.selectedFranchisee);\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        // if(nextProps.invoiceForm.customer!==null){\r\n        //     if(nextProps.invoiceForm.type==='edit')\r\n        //         this.setState({InvoiceNo: nextProps.invoiceForm.customer.InvoiceNo});\r\n        //     this.setState({value: nextProps.invoiceForm.customer.CustomerName});\r\n        //     this.setState({franchiseeNo: nextProps.invoiceForm.customer.franchiseeNo});\r\n        //     this.setState({InvoiceDate: moment(nextProps.invoiceForm.customer.InvoiceDate)});\r\n        //     this.setState({Date: moment(nextProps.invoiceForm.customer.Date)});\r\n        // }\r\n        //\r\n        // if(nextProps.newInvoice!==null && nextProps.newInvoice!==this.props.newInvoice){\r\n        //     this.setState({bAlertNewTransaction: false});\r\n        //     if(this.state.buttonOption===0){\r\n        //         this.props.resetInvoiceForm();\r\n        //         this.setState({FranchiseeDescription: ''});\r\n        //         this.setState({note: ''});\r\n        //         this.setState({selectedFranchisee: null});\r\n        //         this.setState({value: ''});\r\n        //         this.setState({franchiseeNo: ''});\r\n        //     }\r\n        //     else if(this.state.buttonOption===1) {\r\n        //         this.closeComposeForm();\r\n        //     }\r\n        //     else if(this.state.buttonOption===2) {\r\n        //         this.closeComposeForm();\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.transactionForm.type === 'new')\r\n            this.setState({InvoiceNo: \"PENDING\"});\r\n\r\n        if(this.input) {\r\n            setTimeout(() => {this.input.focus()}, 500);\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(_.set({...this.state}, event.target.name, event.target.type === 'checkbox' ? event.target.checked : event.target.value));\r\n    };\r\n\r\n    addNewInvoice = () => {\r\n        let inv_no = chance.guid()+'_pending';\r\n        let items = [];\r\n        let lines = this.props.transactionForm.data.line;\r\n        //\r\n        lines.forEach(line=>{\r\n            let item = {\r\n                Inv_No: inv_no,\r\n                ServiceTypeListId: 0,\r\n                Description: line.description,\r\n                Type: line.type,\r\n                Frequency: line.frequency,\r\n                LineNo: 1,\r\n                UnitPrice: parseFloat(line.amount),\r\n                Quantity: parseInt(line.quantity),\r\n                TaxRate: line.tax,\r\n                ExtendedPrice: line.extended,\r\n                Total: line.total,\r\n                MarkUpTotal: line.markup,\r\n                Commission: 0,\r\n                CommissionTotal: 0,\r\n                ExtraWork: 1,\r\n            };\r\n\r\n            items.push(item);\r\n        });\r\n\r\n        let result = {\r\n            Inv_No: inv_no,\r\n            Apply_to: 'Apply To',\r\n            PeriodId: this.props.invoices.PeriodId[0],\r\n            Description: this.state.FranchiseeDescription,\r\n            Notes: this.state.note,\r\n            RegionId: this.props.regionId,\r\n            BillRunId: 999,\r\n            InvoiceDate: this.state.InvoiceDate,\r\n            Date: this.state.Date,\r\n            CreatedById: this.props.user.UserId,\r\n            CreatedDate: moment(),\r\n            SubTotal: this.state.subTotal,\r\n            MarkupAmountTotal :this.state.markup,\r\n            TaxTotal: this.state.tax,\r\n            GrandTotal: this.state.total,\r\n            TransactionStatusListId: 2,\r\n            Status: 2,\r\n            SysCust: 2,\r\n            Items: items\r\n        };\r\n        this.props.addInvoice(this.props.regionId, result);\r\n        console.log('result', JSON.stringify(result));\r\n    };\r\n\r\n    validateNewTransaction = () => {\r\n        if(this.state.selectedFranchisee===null){\r\n            this.setState({snackMessage: 'Please choose a franchisee from Franchisee suggestion'});\r\n            this.setState({openSnack: true});\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    onSaveTransaction = (buttonOption) => {\r\n        if(this.validateNewTransaction()){\r\n            this.setState({bAlertNewTransaction: true});\r\n            this.setState({buttonOption: buttonOption});\r\n        }\r\n    };\r\n\r\n    onSaveAndAddMore=()=>{\r\n        this.onSaveTransaction(0);\r\n    };\r\n\r\n    onSaveAndClose = () => {\r\n        this.onSaveTransaction(1);\r\n        this.closeComposeForm();\r\n    };\r\n\r\n    onSubmitForApproval=()=>{\r\n        this.onSaveTransaction(2);\r\n    };\r\n\r\n    closeComposeForm = () => {\r\n        this.props.transactionForm.type === 'edit' ? this.props.closeEditTransactionForm() : this.props.closeNewTransactionForm();\r\n    };\r\n\r\n    handleDueDateChange = date => {\r\n        this.setState({ Date: date});\r\n    };\r\n    handleTransactionDateChange = date => {\r\n        this.setState({ TransactionDate: date });\r\n    };\r\n\r\n    storeInputReference = autosuggest => {\r\n        if (autosuggest !== null) {\r\n            this.input = autosuggest.input;\r\n        }\r\n    };\r\n\r\n    handleCloseNewInvoice = ()=>{\r\n        this.setState({bAlertNewTransaction: false})\r\n    };\r\n\r\n\r\n    handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        this.setState({ openSnack: false });\r\n    };\r\n\r\n\r\n    render()\r\n    {\r\n        const { classes} = this.props;\r\n        const { value, suggestions } = this.state;\r\n\r\n        const today = new Date();\r\n\r\n        const autosuggestProps = {\r\n            renderInputComponent: this.renderInputComponent,\r\n            suggestions: suggestions,\r\n            onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\r\n            onSuggestionsClearRequested: this.onSuggestionsClearRequested,\r\n            getSuggestionValue: this.getSuggestionValue,\r\n            renderSuggestion,\r\n        };\r\n\r\n        let bReadonly = false;\r\n        if(this.props.transactionForm.type === 'new') bReadonly = true;\r\n\r\n        return (\r\n            <FuseAnimate animation=\"transition.slideRightIn\" delay={300}>\r\n                <div className=\"h-full flex flex-col relative\">\r\n                    <div className=\"flex flex-col p-24 pt-12 pb-0\" style={{flex: \"1\"}}>\r\n                        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                            <Grid container className={classNames(classes.formControl)}>\r\n                                <Grid item xs={12} sm={6} md={6} className=\"flex flex-row pr-16\">\r\n                                    <Autosuggest\r\n                                        {...autosuggestProps}\r\n                                        inputProps={{\r\n                                            classes,\r\n                                            placeholder: 'Search Franchisee Name',\r\n                                            value: value,\r\n                                            onChange: this.onChange,\r\n                                        }}\r\n                                        theme={{\r\n                                            container: classNames(classes.container),\r\n                                            suggestionsContainerOpen: classes.suggestionsContainerOpen,\r\n                                            suggestionsList: classes.suggestionsList,\r\n                                            suggestion: classes.suggestion,\r\n                                        }}\r\n                                        renderSuggestionsContainer={options => (\r\n                                            <Paper {...options.containerProps} square>\r\n                                                {options.children}\r\n                                            </Paper>\r\n                                        )}\r\n                                        ref={this.storeInputReference}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2} md={2} className=\"flex flex-row xs:flex-col xs:mb-24 pr-8 pl-16\" style={{padding: '0 6px!important'}}>\r\n                                    <DatePicker\r\n                                        margin=\"none\"\r\n                                        label=\"Transaction Date\"\r\n                                        name=\"TransactionDate\"\r\n                                        variant=\"outlined\"\r\n                                        format=\"MM/DD/YYYY\"\r\n                                        value={this.state.TransactionDate}\r\n                                        onChange={this.handleTransactionDateChange}\r\n                                        fullWidth\r\n                                        required\r\n                                        InputProps={{\r\n                                            classes: {\r\n                                                input: classes.input1,\r\n                                            },\r\n                                        }}\r\n                                        InputLabelProps = {{\r\n                                            shrink: true,\r\n                                            classes: {outlined: classes.label}\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2} md={2} className=\"flex flex-row xs:flex-col pr-8 pl-8\"\r\n                                      style={{padding: '0 6px!important'}}>\r\n                                    <DatePicker\r\n                                        margin=\"none\"\r\n                                        label=\"Due Date\"\r\n                                        format=\"MM/DD/YYYY\"\r\n                                        name=\"Date\"\r\n                                        variant=\"outlined\"\r\n                                        value={this.state.Date}\r\n                                        onChange={this.handleDueDateChange}\r\n                                        required\r\n                                        fullWidth\r\n                                        InputProps={{\r\n                                            classes: {\r\n                                                input: classes.input1,\r\n                                            },\r\n                                        }}\r\n                                        InputLabelProps = {{\r\n                                            shrink: true,\r\n                                            classes: {outlined: classes.label}\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={2} md={2} className=\"flex flex-row xs:flex-col pl-4\" >\r\n                                    <TextField\r\n                                        margin=\"none\"\r\n                                        label=\"Transaction #\"\r\n                                        placeholder=\"Transaction #\"\r\n                                        InputProps={{\r\n                                            readOnly: bReadonly,\r\n                                            classes: {\r\n                                                input: bReadonly? classes.inputOrange: classes.input,\r\n                                            },\r\n                                        }}\r\n                                        InputLabelProps = {{\r\n                                            shrink: true,\r\n                                            classes: {outlined: classes.label}\r\n                                        }}\r\n                                        name=\"InvoiceNo\"\r\n                                        variant=\"outlined\"\r\n                                        value={this.state.InvoiceNo}\r\n                                        onChange={this.handleChange}\r\n                                        required\r\n                                        fullWidth\r\n                                        style = {{paddingLeft: 4,fontSize: this.props.transactionForm.type === 'new' ? '18px!important': 'inherit',\r\n                                            fontWeight: this.props.transactionForm.type === 'new' ? 700: 'inherit'\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </MuiPickersUtilsProvider>\r\n                        <GridContainer className={classNames(classes.formControl, \"mb-0\")}>\r\n                            <GridItem xs={12} sm={6} md={6} className=\"flex flex-row xs:flex-col\">\r\n                                <Card className={classes.card}>\r\n                                    <CardHeader title=\"Franchisee Transaction\" className={classNames(classes.cardHeader, \"flex-1\")} />\r\n                                    <CardContent className={classNames(classes.cardContent)}>\r\n                                        <div className=\"flex flex-row justify-between mb-4\">\r\n                                            <div className=\"flex flex-row\">\r\n                                                <Icon fontSize={\"small\"} className=\"mr-4\">account_circle</Icon>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                    <strong>{this.state.selectedFranchisee ? this.state.selectedFranchisee.Name: this.state.value}</strong>\r\n                                                </Typography>\r\n                                            </div>\r\n                                            <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                <strong>Franchisee #: {this.state.selectedFranchisee? this.state.selectedFranchisee.Number: this.state.franchiseeNo}</strong>\r\n                                            </Typography>\r\n                                        </div>\r\n                                        {this.state.selectedFranchisee && (\r\n                                            <div className=\"flex flex-row justify-start mb-4\">\r\n                                                <div className=\"flex flex-row items-center\">\r\n                                                    <Icon fontSize={\"small\"} className=\"mr-4\">place</Icon>\r\n                                                    <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                        {this.state.selectedFranchisee.Address}\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                        {this.state.selectedFranchisee && (\r\n                                            <div className=\"flex flex-row justify-between mb-4\">\r\n                                                <div className=\"flex flex-row items-center\">\r\n                                                    <Icon fontSize={\"small\"} className=\"mr-4\">smartphone</Icon>\r\n                                                    <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                        {this.state.selectedFranchisee.Phone}\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </GridItem>\r\n                            <GridItem xs={12} sm={6} md={6} className= \"flex flex-row justify-end xs:flex-col\">\r\n                                <Card className={classes.card}>\r\n                                    <CardHeader title=\"Billing\" className={classNames(classes.cardHeader, \"flex-1\")} />\r\n                                    <CardContent className={classNames(classes.cardContent)}>\r\n\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </GridItem>\r\n                        </GridContainer>\r\n                        <div className=\"w-full mt-4\">\r\n                            <TextField\r\n                                id=\"FranchiseeDescription\"\r\n                                name=\"FranchiseeDescription\"\r\n                                label=\"Description\"\r\n                                className={classes.textField}\r\n                                value={this.state.FranchiseeDescription}\r\n                                onChange={this.handleChange}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputLabelProps = {{\r\n                                    shrink: true,\r\n                                    classes: {outlined: classes.label}\r\n                                }}\r\n                                InputProps={{\r\n                                    classes: {\r\n                                        input: classes.input, multiline: classes.input\r\n                                    },\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <Grid container className={classNames(classes.formControl)} style={{flex: \"9999 1 0\"}}>\r\n                            <Grid item xs={12} sm={12} md={12} className=\"flex flex-row xs:flex-col xs:mb-24\">\r\n                                <TransactionTable />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider variant=\"middle\"/>\r\n                    </div>\r\n                    <div className=\"flex flex-shrink flex-col w-full pl-24 pr-24 pt-0 pb-12\">\r\n                        <GridContainer style={{alignItems: 'center'}} className={classNames(classes.formControl)}>\r\n                            <GridItem xs={12} sm={9} md={9} className=\"flex flex-col xs:flex-col xs:mb-24\">\r\n                                <div className=\"w-full\">\r\n                                    <TextField\r\n                                        id=\"note\"\r\n                                        name=\"note\"\r\n                                        label=\"Note\"\r\n                                        className={classes.textField}\r\n                                        value={this.state.note}\r\n                                        onChange={this.handleChange}\r\n                                        margin=\"dense\"\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        multiline\r\n                                        InputLabelProps = {{\r\n                                            shrink: true,\r\n                                            classes: {outlined: classes.label}\r\n                                        }}\r\n                                        InputProps={{\r\n                                            classes: {\r\n                                                input: classes.input, multiline: classes.input\r\n                                            },\r\n                                        }}\r\n                                        rows={3}\r\n                                    />\r\n                                </div>\r\n                            </GridItem>\r\n                            <GridItem xs={12} sm={3} md={3} className=\"flex flex-col xs:flex-col xs:mb-24\">\r\n                                <div className=\"w-full p-12 flex justify-end pb-0\">\r\n                                    <span className={classes.summary}><strong>Subtotal: </strong>${this.state.subTotal.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}</span>\r\n                                </div>\r\n                                <div className=\"w-full p-12 flex justify-end pb-0 pt-6 \">\r\n                                    <span className={classes.summary}><strong>Markup Total: </strong>${this.state.markup.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}</span>\r\n                                </div>\r\n                                <div className=\"w-full p-12 flex justify-end pt-6 pb-6\">\r\n                                    <span className={classes.summary}><strong>Tax: </strong>${this.state.tax.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}</span>\r\n                                </div>\r\n                                <div className=\"w-full p-12 flex justify-end  pt-6 pb-6\">\r\n                                    <span className={classes.summary}><strong>Grand Total: </strong>${this.state.total.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}</span>\r\n                                </div>\r\n                            </GridItem>\r\n                        </GridContainer>\r\n                        <div className=\"flex flex-1 flex-row justify-between items-center\">\r\n                            <div className=\"flex flex-row justify-start\">\r\n                                <FuseAnimate animation=\"transition.expandIn\" delay={300}>\r\n                                    <span className={classes.summary}><strong>Created By: </strong>{`${this.props.user.firstName} ${this.props.user.lastName}, ${moment(today).format('MM/DD/YYYY')}`}</span>\r\n                                </FuseAnimate>\r\n                            </div>\r\n                            <div className=\"flex flex-1 flex-row justify-end\">\r\n                                <FuseAnimate animation=\"transition.expandIn\" delay={300}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classNames(classes.button, \"mr-12\")}\r\n                                        onClick={() => {\r\n                                            this.onSaveAndAddMore();\r\n                                        }}\r\n                                    >\r\n                                        Save & Add more\r\n                                    </Button>\r\n                                </FuseAnimate>\r\n                                <FuseAnimate animation=\"transition.expandIn\" delay={300}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classNames(classes.button, \"mr-12\")}\r\n                                        onClick={() => {\r\n                                            this.onSaveAndClose();\r\n                                        }}\r\n                                    >\r\n                                        Save & Close\r\n                                    </Button>\r\n                                </FuseAnimate>\r\n                                <FuseAnimate animation=\"transition.expandIn\" delay={300}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classNames(classes.button, \"mr-12\")}\r\n                                        onClick={() => {\r\n                                            this.onSubmitForApproval();\r\n                                        }}\r\n                                    >\r\n                                        Submit for Approval\r\n                                    </Button>\r\n                                </FuseAnimate>\r\n                                <FuseAnimate animation=\"transition.expandIn\" delay={300}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        onClick={() => {\r\n                                            this.closeComposeForm();\r\n                                        }}\r\n                                    >\r\n                                        Close\r\n                                    </Button>\r\n                                </FuseAnimate>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Snackbar\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'left',\r\n                        }}\r\n                        open={this.state.openSnack}\r\n                        autoHideDuration={3000}\r\n                        onClose={this.handleClose}\r\n                    >\r\n                        <MySnackbarContentWrapper\r\n                            onClose={this.handleClose}\r\n                            variant=\"error\"\r\n                            message={this.state.snackMessage}\r\n                        />\r\n                    </Snackbar>\r\n                    <Dialog\r\n                        open={this.state.bAlertNewTransaction}\r\n                        onClose={()=>this.handleCloseNewInvoice()}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\">{\"Create New Invoice\"}</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText id=\"alert-dialog-description\">\r\n                                Do you really want to insert the new invoice?\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={()=>this.handleCloseNewInvoice()} color=\"primary\">\r\n                                Close\r\n                            </Button>\r\n                            <Button onClick={()=>this.addNewInvoice()} color=\"primary\" autoFocus>\r\n                                Create\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </div>\r\n            </FuseAnimate>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch)\r\n{\r\n    return bindActionCreators({\r\n        closeEditTransactionForm: Actions.closeEditTransactionForm,\r\n        closeNewTransactionForm : Actions.closeNewTransactionForm,\r\n        selectCustomer: Actions.selectCustomer,\r\n        resetInvoiceForm: Actions.resetInvoiceForm,\r\n        addInvoice: Actions.addInvoice,\r\n        selectFranchisee: Actions.selectFranchisee\r\n    }, dispatch);\r\n}\r\n\r\nfunction mapStateToProps({transactions, auth})\r\n{\r\n    return {\r\n        transactionForm: transactions.transactionForm,\r\n        newTransaction: transactions.newTransaction,\r\n        user: auth.login,\r\n        regionId: auth.login.defaultRegionId,\r\n        // bStartingSaveFormData: invoices.bStartingSaveFormData\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(withRouter(connect(mapStateToProps, mapDispatchToProps)(TransactionForm)));\r\n","import React, {Component} from 'react';\r\n\r\n// core components\r\nimport {\r\n    Hidden, Icon, IconButton, Input, Paper, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle\r\n} from '@material-ui/core';\r\n\r\n//Janiking\r\nimport JanikingPagination from 'Commons/JanikingPagination';\r\n\r\n\r\nimport {withStyles, Checkbox} from \"@material-ui/core\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n// for store\r\nimport {bindActionCreators} from \"redux\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport * as Actions from 'store/actions';\r\n\r\n// third party\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\n\r\nconst hexToRgb = (hex) =>{\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    } : null;\r\n};\r\n\r\nconst styles = theme => ({\r\n    layoutTable: {\r\n        flexDirection: 'row',\r\n        '& .z-9999': {\r\n            height: 64\r\n        },\r\n        '& .-pageSizeOptions': {\r\n            display: 'none'\r\n        },\r\n        '& .openFilter':{\r\n            width: 'inherit'\r\n        },\r\n        '& .openSummary':{\r\n            width: 300\r\n        },\r\n        '& .p-12-impor': {\r\n            paddingLeft: '1.2rem!important',\r\n            paddingRight: '1.2rem!important',\r\n        },\r\n        '& .ReactTable .rt-noData': {\r\n            top: '250px',\r\n            border: '1px solid coral'\r\n        },\r\n        '& .ReactTable .rt-thead.-headerGroups': {\r\n            display: 'none'\r\n        },\r\n        '& .ReactTable.-highlight .rt-tbody .rt-tr:not(.-padRow):hover': {\r\n            background: 'rgba(' + hexToRgb(theme.palette.secondary.main).r + ',' + hexToRgb(theme.palette.secondary.main).g + ',' + hexToRgb(theme.palette.secondary.main).b + ', .8)',\r\n            color: 'white!important'\r\n        },\r\n        '& .ReactTable .rt-tbody': {\r\n            overflowY: 'scroll',\r\n            overflowX: 'hidden'\r\n        },\r\n        '& .ReactTable .rt-tr-group':{\r\n            flex: '0 0 auto'\r\n        },\r\n        '& .ReactTable .rt-thead.-header':{\r\n            flex: '0 0 auto',\r\n            overflowY: 'scroll'\r\n        },\r\n        '& .ReactTable .rt-thead .rt-th:nth-child(1)': {\r\n            justifyContent: 'center'\r\n        },\r\n        '& .ReactTable .rt-thead.-headerGroups .rt-th:nth-child(2)': {\r\n            width:'inherit!important',\r\n            minWidth:'inherit!important',\r\n        },\r\n        '& .ReactTable .rt-thead .rt-th:last-child': {\r\n            justifyContent: 'flex-end'\r\n        },\r\n    },\r\n    content:{\r\n        position: 'relative'\r\n    },\r\n    tableTheadRow:{\r\n        // backgroundColor: 'rgba(' + hexToRgb(theme.palette.primary.main).r + ',' + hexToRgb(theme.palette.primary.main).g + ',' + hexToRgb(theme.palette.primary.main).b +', .2)'\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    tableThEven:{\r\n        backgroundColor: 'rgba(' + hexToRgb(theme.palette.secondary.main).r + ',' + hexToRgb(theme.palette.secondary.main).g + ',' + hexToRgb(theme.palette.secondary.main).b +', .3)'\r\n    },\r\n    tableTdEven:{\r\n        // backgroundColor: 'rgba(' + hexToRgb(theme.palette.secondary.main).r + ',' + hexToRgb(theme.palette.secondary.main).g + ',' + hexToRgb(theme.palette.secondary.main).b +', .1)'\r\n    },\r\n    imageIcon: {\r\n        width: 24\r\n    }\r\n});\r\n\r\nclass TransactionsLists extends Component {\r\n    state = {\r\n        s: '',\r\n        temp: [],\r\n        data: [],\r\n        selection: [],\r\n        selectAll: false,\r\n        selectedInvoice: null,\r\n        alertOpen: false,\r\n        keyToBeRemoved: -1\r\n    };\r\n\r\n    onChange = (event, { newValue, method }) => {\r\n        this.setState({\r\n            value: newValue.toString()\r\n        });\r\n    };\r\n\r\n    toggleSelection = (key, shift, row) => {\r\n        /*\r\n          https://react-table.js.org/#/story/select-table-hoc\r\n          Implementation of how to manage the selection state is up to the developer.\r\n          This implementation uses an array stored in the component state.\r\n          Other implementations could use object keys, a Javascript Set, or Redux... etc.\r\n        */\r\n        // start off with the existing state\r\n        let selection = [...this.state.selection];\r\n        const keyIndex = selection.indexOf(key);\r\n        // check to see if the key exists\r\n        if (keyIndex >= 0) {\r\n            // it does exist so we will remove it using destructing\r\n            selection = [\r\n                ...selection.slice(0, keyIndex),\r\n                ...selection.slice(keyIndex + 1)\r\n            ];\r\n        } else {\r\n            // it does not exist so add it\r\n            selection.push(key);\r\n        }\r\n        // update the state\r\n        this.setState({ selection });\r\n    };\r\n\r\n    isSelected = key => {\r\n        /*\r\n          Instead of passing our external selection state we provide an 'isSelected'\r\n          callback and detect the selection state ourselves. This allows any implementation\r\n          for selection (either an array, object keys, or even a Javascript Set object).\r\n        */\r\n        return this.state.selection.includes(key);\r\n    };\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.fetchData = this.fetchData.bind(this);\r\n        this.escFunction = this.escFunction.bind(this);\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        if(this.props.data!==prevProps.data)\r\n            this.setState({data: this.props.data});\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({data: this.props.data})\r\n    }\r\n    componentWillUnmount(){\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    escFunction(event){\r\n        if(event.keyCode === 27) {\r\n            this.setState({s: ''});\r\n            this.setState({data: this.props.data})\r\n        }\r\n    }\r\n\r\n    fetchData(state, instance) {\r\n        this.setState({\r\n            pageSize: state.pageSize,\r\n            page: state.page,\r\n        });\r\n    }\r\n\r\n    handleClose = ()=>{\r\n        this.setState({alertOpen: false})\r\n    };\r\n\r\n    handleOpen = (key)=>{\r\n        this.setState({alertOpen: true});\r\n        this.setState({keyToBeRemoved: key})\r\n    };\r\n\r\n    removeSelectedTransaction = ()=>{\r\n        this.props.removeTransaction(this.state.keyToBeRemoved, this.props.transactions);\r\n        if(this.state.selection.length>0){\r\n            _.remove(this.state.selection, function(id) {\r\n                return id === this.state.keyToBeRemoved;\r\n            });\r\n        }\r\n        this.setState({alertOpen: false})\r\n    };\r\n    render()\r\n    {\r\n        const { classes} = this.props;\r\n        const { toggleSelection, isSelected} = this;\r\n\r\n        return (\r\n            <div className={classNames(classes.layoutTable, \"flex flex-col h-full\")}>\r\n                <ReactTable\r\n                    data={this.state.data}\r\n                    minRows = {0}\r\n                    PaginationComponent={JanikingPagination}\r\n                    onFetchData={this.fetchData}\r\n                    getTheadGroupProps={(state, rowInfo, column, instance) =>{\r\n                        return {\r\n                            style:{\r\n                                padding: \"10px 10px\",\r\n                                fontSize: 16,\r\n                                fontWeight: 700\r\n                            },\r\n                        }\r\n                    }}\r\n                    getTheadGroupThProps={(state, rowInfo, column, instance) => {\r\n                        return {\r\n                            style:{\r\n                                padding: \"10px 10px\",\r\n                                fontSize: 18,\r\n                                fontWeight: 700,\r\n                            },\r\n                            className: classNames(\"flex items-center justify-start\")\r\n                        }\r\n                    }}\r\n                    getTheadThProps={(state, rowInfo, column, instance) =>{\r\n                        let border = '1px solid rgba(255,255,255,.6)';\r\n                        if(column.Header==='Actions') border = 'none';\r\n\r\n                        return {\r\n                            style:{\r\n                                fontSize: '1.6rem',\r\n                                fontFamily: 'Muli,Roboto,\"Helvetica\",Arial,sans-serif',\r\n                                fontWeight: 400,\r\n                                lineHeight: 1.75,\r\n                                color: 'white',\r\n                                borderRight: border\r\n                            },\r\n                        }\r\n                    }}\r\n                    getTheadProps={(state, rowInfo, column, instance) =>{\r\n                        return {\r\n                            style:{\r\n                                fontSize: 13,\r\n                            },\r\n                            className: classes.tableTheadRow\r\n                        }\r\n                    }}\r\n                    getTdProps={(state, rowInfo, column, instance) =>{\r\n\r\n                        return {\r\n                            style:{\r\n                                textAlign: 'center',\r\n                                flexDirection: 'row',\r\n                                fontSize: 12,\r\n                                padding: \"0\",\r\n                            },\r\n                        }\r\n                    }}\r\n                    getTrProps={(state, rowInfo, column) => {\r\n                        return {\r\n                            className: \"cursor-pointer\",\r\n                            onClick  : (e, handleOriginal) => {\r\n                                if ( rowInfo )\r\n                                {\r\n                                    // this.props.openEditInvoiceForm(rowInfo.original);\r\n                                }\r\n                            }\r\n                        }\r\n                    }}\r\n                    columns={[\r\n                        {\r\n                            columns: [\r\n                                {\r\n                                    Header   : (instance) => (\r\n                                        <div/>\r\n                                    ),\r\n                                    accessor : \"\",\r\n                                    Cell     : row => {\r\n                                        return (<Checkbox\r\n                                                onClick={(event) => {\r\n                                                    event.stopPropagation();\r\n                                                }}\r\n                                                checked={isSelected(row.value.key)}\r\n                                                onChange={() => toggleSelection(row.value.key)}\r\n                                            />\r\n                                        )\r\n                                    },\r\n                                    className: \"justify-center\",\r\n                                    sortable : false,\r\n                                    width    : 48\r\n                                }\r\n                            ],\r\n                            className: classNames(\"justify-center\")\r\n                        },\r\n                        {\r\n                            columns: [\r\n                                {\r\n                                    Header: \"Fran. #\",\r\n                                    accessor: \"FranchiseeNo\",\r\n                                    filterAll: true,\r\n                                    width: 100,\r\n                                    className: classNames(classes.tableTdEven, \"flex items-center  justify-center\")\r\n                                },\r\n                                {\r\n                                    Header: \"Number\",\r\n                                    accessor: \"Number\",\r\n                                    filterAll: true,\r\n                                    width: 80,\r\n                                    className: classNames(classes.tableTdEven, \"flex items-center  justify-center\")\r\n                                },\r\n                                {\r\n                                    Header: \"Description\",\r\n                                    accessor: \"Description\",\r\n                                    className: classNames(\"flex items-center  justify-start p-12-impor\")\r\n                                },\r\n                                {\r\n                                    Header: \"Name\",\r\n                                    accessor: \"Name\",\r\n                                    className: classNames(classes.tableTdEven, \"flex items-center  justify-center\"),\r\n                                    width: 160\r\n                                },\r\n                                {\r\n                                    Header: \"Ext. Price\",\r\n                                    accessor: \"ExtendedPrice\",\r\n                                    Cell     : row => {\r\n                                        return '$'+parseFloat(row.original.ExtendedPrice).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')\r\n                                    },\r\n                                    className: classNames(classes.tableTdEven, \"flex items-center  justify-end p-12-impor\"),\r\n                                    width: 100\r\n                                },\r\n                                {\r\n                                    Header: \"Tax\",\r\n                                    accessor: \"Tax\",\r\n                                    Cell     : row => {\r\n                                        return '$'+parseFloat(row.original.Tax).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')\r\n                                    },\r\n                                    className: classNames(classes.tableTdEven, \"flex items-center  justify-end p-12-impor\"),\r\n                                    width: 80\r\n                                },\r\n                                {\r\n                                    Header: \"Fees\",\r\n                                    accessor: \"Fees\",\r\n                                    Cell     : row => {\r\n                                        return '$'+parseFloat(row.original.Fees).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')\r\n                                    },\r\n                                    className: classNames(classes.tableTdEven, \"flex items-center  justify-end p-12-impor\"),\r\n                                    width: 80\r\n                                },\r\n                                {\r\n                                    Header: \"Total\",\r\n                                    Cell     : row => {\r\n                                        return '$'+parseFloat(row.original.TotalTrxAmount).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')\r\n                                    },\r\n                                    accessor: \"TotalTrxAmount\",\r\n                                    className: classNames(\"flex items-center  justify-end p-12-impor\"),\r\n                                    width: 120\r\n                                },\r\n                                {\r\n                                    Header: \"Trx Date\",\r\n                                    accessor: \"TrxDate\",\r\n                                    className: classNames(classes.tableTdEven, \"flex items-center  justify-center\"),\r\n                                    width: 100\r\n                                },\r\n                                {\r\n                                    Header: \"TrxType\",\r\n                                    accessor: \"TrxType\",\r\n                                    className: classNames(classes.tableTdEven, \"flex items-center  justify-center\"),\r\n                                    width: 70\r\n                                },\r\n                                {\r\n                                    Header: \"Status\",\r\n                                    accessor: \"Status\",\r\n                                    className: classNames(classes.tableTdEven, \"flex items-center  justify-center\"),\r\n                                    width: 80\r\n                                },\r\n                                {\r\n                                    Header: \"Actions\",\r\n                                    width : 100,\r\n                                    Cell  : row => (\r\n                                        <div className=\"flex items-center actions justify-center w-full\">\r\n                                            <IconButton\r\n                                                onClick={(ev) => {\r\n                                                    ev.stopPropagation();\r\n                                                    this.handleOpen(row.original.key);\r\n                                                }}\r\n                                            >\r\n                                                <Icon fontSize={\"small\"}>delete</Icon>\r\n                                            </IconButton>\r\n                                            <IconButton\r\n                                                onClick={(ev) => {\r\n                                                    ev.stopPropagation();\r\n                                                }}\r\n                                            >\r\n                                                <Icon fontSize={\"small\"}>edit</Icon>\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            ]\r\n                        },\r\n                    ]}\r\n                    defaultPageSize={100}\r\n                    className={classNames( \"-striped -highlight\")}\r\n                    totalRecords = {this.state.data.length}\r\n                    style={{\r\n                        height: '100%',\r\n                    }}\r\n                />\r\n                <Dialog\r\n                    open={this.state.alertOpen}\r\n                    onClose={()=>this.handleClose()}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"Remove Transaction\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Do you really want to remove the selected transaction?\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={()=>this.handleClose()} color=\"primary\">\r\n                            Disagree\r\n                        </Button>\r\n                        <Button onClick={()=>this.removeSelectedTransaction()} color=\"primary\" autoFocus>\r\n                            Agree\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch)\r\n{\r\n    return bindActionCreators({\r\n        toggleFilterPanel: Actions.toggleTransactionFilterPanel,\r\n        removeTransaction: Actions.removeTransaction\r\n    }, dispatch);\r\n}\r\n\r\nfunction mapStateToProps({transactions, auth})\r\n{\r\n    return {\r\n        regionId: auth.login.defaultRegionId,\r\n        transactions: transactions.transactionsDB,\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(withRouter(connect(mapStateToProps, mapDispatchToProps)(TransactionsLists)));\r\n\r\n","import React, {Component} from 'react';\r\n\r\n// Material-UI core components\r\nimport {\r\n    Icon, Fab, Typography, Hidden, IconButton, Button, Paper, Input, CircularProgress, Toolbar} from '@material-ui/core';\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n//Custom Components\r\nimport FilterPanel from './filterPanel';\r\n\r\n// theme components\r\nimport {FusePageCustom, FuseAnimate} from '@fuse';\r\nimport TransactionForm from './transactionForm'\r\n\r\n// for store\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport * as Actions from '../../../../store/actions';\r\n\r\n// third party\r\nimport classNames from 'classnames';\r\nimport TransactionLists from './FranchiseeLists';\r\nimport _ from \"lodash\";\r\nimport InvoiceForm from \"../../accounts-receivable/Invoice/InvoiceForm\";\r\n\r\nconst headerHeight = 80;\r\n\r\nconst hexToRgb = (hex) =>{\r\n    let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    } : null;\r\n};\r\n\r\nconst styles = theme => ({\r\n    layoutRoot: {\r\n        flexDirection: 'row',\r\n        '& .z-9999': {\r\n            height: 64\r\n        },\r\n        '& .openFilter':{\r\n            width: 'inherit'\r\n        },\r\n    },\r\n    layoutHeader       : {\r\n        height   : headerHeight,\r\n        minHeight: headerHeight,\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    layoutLeftSidebar : {\r\n        width: 0,\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: 'inherit'\r\n        }\r\n    },\r\n    layoutSidebarHeader: {\r\n        height   : headerHeight,\r\n        minHeight: headerHeight,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    content:{\r\n        position: 'relative'\r\n    },\r\n    search: {\r\n        width: '100%',\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: '100%'\r\n        }\r\n    },\r\n    filterPanelButton: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        minWidth: 42,\r\n        padding: 8,\r\n        justifyContent: 'center',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.primary.dark,\r\n        }\r\n    },\r\n    sideButton          : {\r\n        backgroundColor: theme.palette.primary.light,\r\n        height: 46,\r\n        width: 46,\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.primary.dark,\r\n        }\r\n    },\r\n    tableTheadRow:{\r\n        // backgroundColor: 'rgba(' + hexToRgb(theme.palette.primary.main).r + ',' + hexToRgb(theme.palette.primary.main).g + ',' + hexToRgb(theme.palette.primary.main).b +', .2)'\r\n        backgroundColor: theme.palette.primary.main,\r\n        padding: 12\r\n    },\r\n    imageIcon: {\r\n        width: 24\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100vh',\r\n        backgroundColor: 'rgba(0,0,0, .9)',\r\n        zIndex: 1000,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        display: 'flex',\r\n        opacity: 0.5\r\n    },\r\n    progress: {\r\n        margin: theme.spacing.unit * 2,\r\n    },\r\n});\r\n\r\nclass TransactionsApp extends Component {\r\n    state = {\r\n        s: '',\r\n        data: [],\r\n        selection: [],\r\n        regionId: 0,\r\n        checkedCompleted: true,\r\n        checkedOpen: true,\r\n        selectedTransaction: null,\r\n        franchisees: null,\r\n    };\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        if(!props.bLoadedTransactions) {\r\n            props.getTransactions();\r\n        }\r\n\r\n        if (!props.bLoadedFranchisees) {\r\n            props.getFranchisees(props.regionId, props.fstatusId, props.fLocation, props.fLongitude, props.fLatitude, props.fSearchText);\r\n        }\r\n    }\r\n\r\n    search = (val)=> {\r\n        const temp = this.state.data.filter( d => {\r\n            console.log('value=', d);\r\n            return d.Name.indexOf(val) !== -1 || !val ||\r\n                d.FranchiseeNo.indexOf(val) !== -1 ||\r\n                // d.TrxType.toString().indexOf(val) !== -1\r\n                d.Number.indexOf(val) !== -1 ||\r\n                d.ExtendedPrice.toString().indexOf(val) !== -1 ||\r\n                d.Tax.toString().indexOf(val) !== -1 ||\r\n                d.Fees.toString().indexOf(val) !== -1 ||\r\n                d.TotalTrxAmount.toString().indexOf(val) !== -1\r\n        });\r\n\r\n        this.setState({temp: temp});\r\n    };\r\n\r\n\r\n    handleChange = prop => event => {\r\n        this.setState({ [prop]: event.target.value });\r\n    };\r\n    componentWillMount(){\r\n        const {regionId, fstatusId, fLocation, fLongitude, fLatitude, fSearchText} = this.props;\r\n\r\n        this.setState({checkedCompleted: this.props.transactionStatus.checkedCompleted});\r\n        this.setState({checkedOpen: this.props.transactionStatus.checkedOpen});\r\n        this.getTransactions();\r\n        this.props.getFranchisees(regionId, fstatusId, fLocation, fLongitude, fLatitude, fSearchText);\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        let bChanged = false;\r\n        const {fstatusId, fLocation, fLongitude, fLatitude, fSearchText} = this.props;\r\n\r\n        if(this.props.regionId !== prevProps.regionId) {\r\n            this.setState({regionId: prevProps.regionId});\r\n            bChanged = true;\r\n        }\r\n\r\n        if(this.props.transactionStatus.checkedCompleted !== prevProps.transactionStatus.checkedCompleted) {\r\n            this.setState({checkedCompleted: !this.state.checkedCompleted});\r\n            bChanged = true;\r\n        }\r\n\r\n        if(this.props.transactionStatus.checkedOpen !== prevProps.transactionStatus.checkedOpen) {\r\n            this.setState({checkedOpen: !this.state.checkedOpen});\r\n            bChanged = true;\r\n        }\r\n\r\n        if(this.props.regionId !== prevProps.regionId){\r\n            this.props.getFranchisees(this.props.regionId, fstatusId, fLocation, fLongitude, fLatitude, fSearchText);\r\n        }\r\n\r\n        if(bChanged)\r\n            this.getTransactions();\r\n\r\n        if(prevProps.transactions!== this.props.transactions){\r\n            this.getTransactions();\r\n        }\r\n\r\n        if(prevState.s!==this.state.s) {\r\n            this.search(this.state.s);\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(this.props.transactions!==nextProps.transactions)\r\n            this.getTransactions(nextProps.transactions);\r\n\r\n        if(nextProps.franchisees!==null && this.props.franchisees!==nextProps.franchisees){\r\n            this.setState({franchisees: nextProps.franchisees.Data.Region[0].FranchiseeList});\r\n        }\r\n    }\r\n\r\n    onNewTransaction = () => {\r\n        if(this.props.filterState) this.props.toggleFilterPanel();\r\n\r\n        this.props.openNewTransactionForm();\r\n    };\r\n\r\n    getTransactions =(rawData=this.props.transactions) =>{\r\n        if(rawData.transactionsDB===null) return;\r\n\r\n        let temp0 = rawData.transactionsDB.Data.FranchiseeTransactions;\r\n        let temp=[];\r\n        let all_temp=[];\r\n        const statusStrings = ['Open', 'Completed'];\r\n        const keys=['checkedOpen', 'checkedCompleted'];\r\n\r\n        keys.map((key, index)=> {\r\n\r\n            if(this.props.transactionStatus[key]){\r\n                temp = temp0.filter(d => {\r\n                    // if(this.props.regionId===0)\r\n                    return d.Status.toLowerCase() === statusStrings[index].toLowerCase();\r\n                    // else\r\n                    //     return d.Status.toLowerCase() === statusStrings[index] && d.RegionId === this.props.regionId\r\n                });\r\n            }\r\n            all_temp =_.uniq([...all_temp, ...temp]);\r\n            return true;\r\n        });\r\n        this.setState({temp: all_temp});\r\n        this.setState({data: all_temp});\r\n    };\r\n\r\n    render()\r\n    {\r\n        const {classes, filterState, toggleFilterPanel, transactionForm} = this.props;\r\n        const { selection } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <FusePageCustom\r\n                    classes={{\r\n                        root: classes.layoutRoot,\r\n                        header: classes.layoutHeader,\r\n                        content: classes.content,\r\n                        leftSidebar : classNames(classes.layoutLeftSidebar, {'openFilter': filterState}),\r\n                        sidebarHeader: classes.layoutSidebarHeader,\r\n                    }}\r\n                    leftSidebarHeader={\r\n                        <div className={classNames(\"flex flex-row w-full h-full justify-between p-12 align-middle pr-0\", {'filteropen': filterState})}>\r\n                            <h4 style={{marginBlockStart: '1em'}}>Filter Panel</h4>\r\n                            <FuseAnimate animation=\"transition.expandIn\" delay={200}>\r\n                                <div>\r\n                                    <Hidden xsDown>\r\n                                        <IconButton onClick={(ev)=>toggleFilterPanel()}>\r\n                                            <Icon>close</Icon>\r\n                                        </IconButton>\r\n                                    </Hidden>\r\n                                </div>\r\n                            </FuseAnimate>\r\n                        </div>\r\n                    }\r\n                    leftSidebarContent={\r\n                        <FilterPanel/>\r\n                    }\r\n                    header={\r\n                        <div className=\"flex w-full items-center\">\r\n                            {(this.state.temp && !transactionForm.props.open) && (\r\n                                <div className=\"flex row flex-1  p-8 sm:p-12 relative justify-between\">\r\n                                    <div className=\"flex flex-row flex-1 justify-between\">\r\n                                        <div className=\"flex flex-shrink items-center\">\r\n                                            <div className=\"flex items-center\">\r\n                                                <FuseAnimate animation=\"transition.expandIn\" delay={300}>\r\n                                                    <Icon className=\"text-32 mr-12\">account_box</Icon>\r\n                                                </FuseAnimate>\r\n                                                <FuseAnimate animation=\"transition.slideLeftIn\" delay={300}>\r\n                                                    <Typography variant=\"h6\" className=\"hidden sm:flex\">Franchisees | Transactions</Typography>\r\n                                                </FuseAnimate>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"flex flex-shrink items-center\">\r\n                                            <FuseAnimate animation=\"transition.expandIn\" delay={300}>\r\n                                                <Fab color=\"secondary\" aria-label=\"add\"\r\n                                                     className={classNames(classes.sideButton, \"mr-12\")} onClick={() => this.onNewTransaction()}>\r\n                                                    <Icon>add</Icon>\r\n                                                </Fab>\r\n                                            </FuseAnimate>\r\n                                            <FuseAnimate animation=\"transition.expandIn\" delay={300}>\r\n                                                <Fab color=\"secondary\" aria-label=\"add\"\r\n                                                     className={classNames(classes.sideButton, \"mr-12\")} onClick={() => this.props.history.push('/apps/mail/inbox')}>\r\n                                                    <Icon>mail_outline</Icon>\r\n                                                </Fab>\r\n                                            </FuseAnimate>\r\n                                            <FuseAnimate animation=\"transition.expandIn\" delay={300}>\r\n                                                <Fab color=\"secondary\" aria-label=\"add\" className={classes.sideButton} onClick={() => alert('ok')}>\r\n                                                    <Icon>print</Icon>\r\n                                                </Fab>\r\n                                            </FuseAnimate>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            {(this.state.temp && transactionForm.props.open) && (\r\n                                <div className=\"flex row flex-1  p-8 sm:p-12 relative justify-between\">\r\n                                    <div className=\"flex flex-row flex-1 justify-between\">\r\n                                        <div className=\"flex flex-shrink items-center\">\r\n                                            <div className=\"flex items-center\">\r\n                                                <FuseAnimate animation=\"transition.expandIn\" delay={300}>\r\n                                                    <Toolbar className=\"pl-12 pr-0\">\r\n                                                        <img className=\"mr-12\" src=\"assets/images/invoices/invoice-icon-white.png\" alt=\"new transaction\" style={{width: 32, height: 32}}/>\r\n                                                    </Toolbar>\r\n                                                </FuseAnimate>\r\n\r\n                                                {this.props.transactionForm.type === 'edit' && (\r\n                                                    <FuseAnimate animation=\"transition.slideLeftIn\" delay={300}>\r\n                                                        <Typography variant=\"h6\" className=\"hidden sm:flex\">Franchisees | Edit Transaction</Typography>\r\n                                                    </FuseAnimate>\r\n                                                )}\r\n                                                {this.props.transactionForm.type === 'new' && (\r\n                                                    <FuseAnimate animation=\"transition.slideLeftIn\" delay={300}>\r\n                                                        <Typography variant=\"h6\" className=\"hidden sm:flex\">Franchisees | New Transaction</Typography>\r\n                                                    </FuseAnimate>\r\n                                                )}\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    }\r\n                    content={\r\n                        <div className=\"flex-1 flex-col absolute w-full h-full\">\r\n                            {(this.state.temp && !transactionForm.props.open) && (\r\n                                <div className={classNames(\"flex flex-col h-full\")}>\r\n                                    <div className=\"flex flex-row items-center p-12\">\r\n                                        <div className=\"flex justify-start items-center\">\r\n                                            <Hidden smDown>\r\n                                                <Button\r\n                                                    onClick={(ev) => toggleFilterPanel()}\r\n                                                    aria-label=\"toggle filter panel\"\r\n                                                    color=\"secondary\"\r\n                                                    disabled={filterState ? true : false}\r\n                                                    className={classNames(classes.filterPanelButton)}\r\n                                                >\r\n                                                    <img className={classes.imageIcon} src=\"assets/images/invoices/filter.png\" alt=\"filter\"/>\r\n                                                </Button>\r\n                                            </Hidden>\r\n                                            <Hidden smUp>\r\n                                                <Button\r\n                                                    onClick={(ev) => this.pageLayout.toggleLeftSidebar()}\r\n                                                    aria-label=\"toggle filter panel\"\r\n                                                    className={classNames(classes.filterPanelButton)}\r\n                                                >\r\n                                                    <img className={classes.imageIcon} src=\"assets/images/invoices/filter.png\" alt=\"filter\"/>\r\n                                                </Button>\r\n                                            </Hidden>\r\n                                        </div>\r\n                                        <div className=\"flex items-center w-full h-44 mr-12 ml-12\">\r\n                                            <Paper className={\"flex items-center h-44 w-full lg:mr-12 xs:mr-0\"} elevation={1}>\r\n                                                <Input\r\n                                                    placeholder=\"Search...\"\r\n                                                    className={classNames(classes.search, 'pl-16')}\r\n                                                    // className=\"pl-16\"\r\n                                                    disableUnderline\r\n                                                    fullWidth\r\n                                                    value={this.state.s}\r\n                                                    onChange={this.handleChange('s')}\r\n                                                    inputProps={{\r\n                                                        'aria-label': 'Search'\r\n                                                    }}\r\n                                                />\r\n                                                <Icon color=\"action\" className=\"mr-16\">search</Icon>\r\n                                            </Paper>\r\n                                        </div>\r\n                                    </div>\r\n                                    <TransactionLists data={this.state.temp}/>\r\n                                </div>\r\n                            )}\r\n                            {(this.state.temp && transactionForm.props.open) && (\r\n                                <TransactionForm franchisees={this.state.franchisees} selectedTransaction={this.state.selectedTransaction}/>\r\n                            )}\r\n                        </div>\r\n                    }\r\n                    onRef={instance => {\r\n                        this.pageLayout = instance;\r\n                    }}\r\n                >\r\n                </FusePageCustom>\r\n                {(this.props.bFranchiseesFetchStart) && (\r\n                    <div className={classes.overlay}>\r\n                        <CircularProgress className={classes.progress} color=\"secondary\"  />\r\n                    </div>\r\n                )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch)\r\n{\r\n    return bindActionCreators({\r\n        getTransactions: Actions.getTransactions,\r\n        toggleFilterPanel: Actions.toggleTransactionFilterPanel,\r\n        openNewTransactionForm: Actions.openNewTransactionForm,\r\n        openEditTransactionForm: Actions.openEditTransactionForm,\r\n        getFranchisees: Actions.getFranchisees,\r\n    }, dispatch);\r\n}\r\n\r\nfunction mapStateToProps({transactions, auth, franchisees})\r\n{\r\n    return {\r\n        transactions: transactions,\r\n        transactionForm: transactions.transactionForm,\r\n        bLoadedTransactions: transactions.bLoadedTransactions,\r\n        filterState: transactions.bOpenedTransactionFilterPanel,\r\n        transactionStatus: transactions.transactionStatus,\r\n        regionId: auth.login.defaultRegionId,\r\n\r\n        bLoadedFranchisees: franchisees.bLoadedFranchisees,\r\n        franchisees: franchisees.franchiseesDB,\r\n        fstatusId: franchisees.statusId,\r\n        fLocation: franchisees.Location,\r\n        fLongitude: franchisees.Longitude,\r\n        fLatitude: franchisees.Latitude,\r\n        fSearchText: franchisees.SearchText,\r\n        bFranchiseesFetchStart: franchisees.bFranchiseesFetchStart,\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(withRouter(connect(mapStateToProps, mapDispatchToProps)(TransactionsApp)));\r\n"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/@material-ui/icons/Cancel.js","main/content/accounts-receivable/Invoice/selectUtils.js","main/content/accounts-receivable/Invoice/InvoiceLine.js","main/content/accounts-receivable/Invoice/InvoiceForm.js"],"names":["_interopRequireDefault","__webpack_require__","Object","defineProperty","exports","value","default","_react","_default","createElement","Fragment","d","fill","NoOptionsMessage","props","react_default","a","Typography_default","assign","color","className","selectProps","classes","noOptionsMessage","innerProps","children","inputComponent","_ref","inputRef","objectWithoutProperties","ref","Control","TextField_default","fullWidth","InputProps","inputProps","objectSpread","input1","innerRef","textFieldProps","Option","MenuItem_default","buttonRef","selected","isFocused","component","style","fontWeight","isSelected","fontSize","Placeholder","placeholder","SingleValue","singleValue","ValueContainer","valueContainer","Menu","Paper_default","square","paper","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","withStyles","theme","backgroundColor","green","palette","dark","primary","amber","icon","iconVariant","opacity","marginRight","spacing","unit","message","display","alignItems","onClose","variant","other","Icon","index_es","classNames","aria-describedby","id","action","key","aria-label","close","onClick","Close_default","counter","createFranchisee","parent_id","fid","fnumber","arguments","length","undefined","name","amount","type","createData","billing","service","description","quantity","tax","markup","extended","total","markupAmount","markupTax","franchisees","renderInputComponent","_inputProps$inputRef","node","input","renderSuggestion","suggestion","isHighlighted","Number","Name","InvoiceLineTable","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","order","data","invoiceForm","label","billingLists","BillingTypeId","page","rowsPerPage","labelWidth","openSnack","snackMessage","nameValue0","nameValue1","nameValue2","nameValue3","nameValue4","nameValue5","nameValue6","nameValue7","nameValue8","nameValue9","nameValue10","nameValue11","nameValue12","nameValue13","nameValue14","nameValue15","nameValue16","nameValue17","nameValue18","nameValue19","nameValue20","nameSuggestions","numberSuggestions","taxRowId","customerTaxAmountLine","selectedBillingOption0","selectedBillingOption1","selectedBillingOption2","selectedBillingOption3","selectedBillingOption4","selectedBillingOption5","selectedBillingOption6","selectedBillingOption7","selectedBillingOption8","selectedBillingOption9","selectedBillingOption10","selectedBillingOption11","selectedBillingOption12","selectedBillingOption13","selectedBillingOption14","selectedBillingOption15","selectedServiceOption0","selectedServiceOption1","selectedServiceOption2","selectedServiceOption3","selectedServiceOption4","selectedServiceOption5","selectedServiceOption6","selectedServiceOption7","selectedServiceOption8","selectedServiceOption9","selectedServiceOption10","selectedServiceOption11","selectedServiceOption12","selectedServiceOption13","selectedServiceOption14","selectedServiceOption15","bTaxAlert","bTaxAlertReduction","bAllowAlertReduction","billingSuggestions","map","b","serviceSuggestions","serviceLists","s","handleChangeBilling","event","n","newData","row","temp","target","setState","updateTaxFromLine","toConsumableArray","_this$state","TotalTaxAmount","ExtendedPrice","TotalAmount","MarkupAmount","MarkupTax","getSuggestions","escapedValue","escapeRegexCharacters","trim","regex","RegExp","Data","Region","FranchiseeList","filter","f","test","getSuggestionfName","onNameChange","_ref2","newValue","f_index","onNameSuggestionsFetchRequested","_ref3","onNameSuggestionsClearRequested","onNameSuggestionSelected","_ref4","handleClose","reason","handleTaxAlertClose","handleTaxAlertReductionClose","addLineData","customer","concat","parseInt","record","addFranchiseeLine","fline","removeLineData","line","_","remove","removeFranch","forEach","getInvoiceLineTaxAmount","isDisable","getCustomerTaxAmount","regionId","CustomerId","handleChange","parseFloat","handleChangeDesc","handleChangeInvoiceLine","handleChangeInvoiceTaxLine","TaxExempt","handleBillingChange","handleServiceChange","updateInvoiceLine","keycode","_this2","document","addEventListener","addInvoiceLineFunction","console","log","items","invoiceDetail","Items","item","index","Billing","Service","Description","Quantity","UnitPrice","TaxRate","Total","MarkUpTotal","distributions","Distribution","FranchiseeNumber","Amount","prevProps","prevState","snapshot","_this3","JSON","stringify","fn","selectedFranchiess","franchisee","f_row","findex","sf","DistributionAmount","nextProps","_this4","components","selectStyles","base","& input","font","all_data","push","root","tableWrapper","es","minRows","showPagination","getTheadThProps","rowInfo","column","instance","border","Header","fontFamily","lineHeight","borderRight","getTheadProps","tableTheadRow","getTdProps","original","justify-end","justify-start","franchiRow","taxColumn","columns","accessor","Cell","root1","react_select_esm","styles","onChange","v","options","width","billingSuggestion","distribution","tableTdEven","margin","InputLabelProps","shrink","dist_default","suggestions","onSuggestionsFetchRequested","onSuggestionsClearRequested","onSuggestionSelected","getSuggestionValue","container","suggestionsContainerOpen","suggestionsList","renderSuggestionsContainer","containerProps","fInput","onBlur","NumberFormatCustom1","NumberFormatCustom2","NumberFormatCustom","NumberFormatCustomPercent","readOnly","toFixed","replace","lineCancelButton","height","minHeight","lineButton","defaultPageSize","anchorOrigin","vertical","horizontal","open","autoHideDuration","aria-labelledby","autoFocus","React","Component","_lineButton","_lineCancelButton","marginTop","head","& .ReactTable .rt-thead.-headerGroups","& .ReactTable .rt-tbody","overflowY","overflowX","& .ReactTable .rt-tr-group","flex","& .ReactTable .rt-td","padding","& .ReactTable .rt-thead .rt-th:nth-child(1)","justifyContent","& .ReactTable .rt-thead .rt-th:last-child","& .franchiRow","& .f1","minWidth","borderRadius","& .f2","marginLeft","& .taxColumn","maxWidth","InvoiceLineHeadRoot","selectRoot","outlined","services","dropdownMenu","& li","breakpoints","down","&:hover","& span","main","textAlign","position","zIndex","maxHeight","listStyleType","flexGrow","flexWrap","overflow","&+div","chip","chipFocused","emphasize","grey","left","divider","& >div","withRouter","connect","_ref5","invoices","auth","franchiseesDB","login","defaultRegionId","bStartingSaveFormData","dispatch","bindActionCreators","Actions","getServiceLists","newInvoiceState","MasterTrxTypeListId","RegionId","RegionName","InvoiceId","InvoiceDate","moment","format","DueDate","CustomerNo","CustomerName","EBill","PrintInvoice","InvoiceDescription","InvoiceAmount","InvoiceTax","InvoiceTotal","CPI","TransactionStatusListId","TransactionStatus","InvoiceBalanceAmount","InvoiceBalanceTax","InvoiceBalanceTotal","EBillText","PrintInvoiceText","IsOpen","ConsolidatedInvoice","ConsolidatedInvoiceId","ConsolidatedInvoiceNo","CreditId","notes","query","matches","match","parts","parse","part","highlight","String","text","InvoiceForm","selectedCustomer","fSuggestions","selectedFranchisee","selectedWork","subTotal","InvoiceNo","PO_number","period","taxExempt","bAlertNewInvoice","buttonOption","franchiseeFromCustomer","required","method","toString","Franchisees","year","month","invoiceDate","endOf","dueDate","add","PaymentTerm","InvoiceDayPreference","startOf","customers","getTotal","set","checked","addNewInvoice","result","Inv_No","ServiceTypeListId","LineNo","Commission","CommissionTotal","ExtraWork","TaxExcempt","FranchiseeId","Apply_to","CustomerNumber","PeriodId","PeriodMonth","PeriodYear","Notes","BillRunId","PONumber","CreatedById","user","UserId","CreatedDate","SubTotal","MarkupAmountTotal","CPIIncrease","TaxTotal","GrandTotal","Status","SysCust","addInvoice","updateInvoice","_id","validateNewInvoice","onSaveInvoice","onSaveAndAddMore","onSaveAndClose","onSubmitForApproval","closeComposeForm","closeEditInvoiceForm","closeNewInvoiceForm","handleDueDateChange","date","handleInvoiceDateChange","handlePeriodChange","storeInputReference","autosuggest","handleCloseNewInvoice","focusDescriptionInputField","setTimeout","focus","selectCustomer","inv_no","newInvoice","updatedInvoices","resetInvoiceForm","today","Date","autosuggestProps","bReadonly","_fuse","animation","delay","formControl","xs","sm","md","material_ui_pickers_esm","utils","MomentUtils","textField","openToYearSelection","paddingRight","inputOrange","paddingLeft","GridContainer","GridItem","card","title","cardHeader","cardContent","Address","City","StateName","PostalCode","number_format_default","Phone","displayType","mask","renderText","BillingCustomerName","BillingAddress","BillingCity","BillingState","BillingPostalCode","control","disabled","multiline","InvoiceLine","rows","summary","firstName","lastName","button","InvoiceForm_MySnackbarContentWrapper","layoutForm","flexDirection","textTransform","marginBottom","right","secondary","paddingTop","paddingBottom","& h6","transform","picker","withTheme","openEditInvoiceForm"],"mappings":"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","file":"static/js/5.10772c73.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Cancel');\n\nexports.default = _default;","import React from 'react';\r\nimport classNames from 'classnames';\r\n// import { makeStyles } from '@material-ui/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { emphasize } from '@material-ui/core/styles/colorManipulator';\r\n\r\nexport function NoOptionsMessage(props) {\r\n    return (\r\n        <Typography\r\n            color=\"textSecondary\"\r\n            className={props.selectProps.classes.noOptionsMessage}\r\n            {...props.innerProps}\r\n        >\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport function inputComponent({ inputRef, ...props }) {\r\n    return <div ref={inputRef} {...props} />;\r\n}\r\n\r\nexport function Control(props) {\r\n    return (\r\n        <TextField\r\n            fullWidth\r\n            InputProps={{\r\n                inputComponent,\r\n                inputProps: {\r\n                    className: props.selectProps.classes.input1,\r\n                    inputRef: props.innerRef,\r\n                    children: props.children,\r\n                    ...props.innerProps,\r\n                },\r\n            }}\r\n            {...props.selectProps.textFieldProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport function Option(props) {\r\n    return (\r\n        <MenuItem\r\n            buttonRef={props.innerRef}\r\n            selected={props.isFocused}\r\n            component=\"div\"\r\n            style={{\r\n                fontWeight: props.isSelected ? 700 : 400, fontSize: 12\r\n            }}\r\n            {...props.innerProps}\r\n        >\r\n            {props.children}\r\n        </MenuItem>\r\n    );\r\n}\r\n\r\nexport function Placeholder(props) {\r\n    return (\r\n        <Typography\r\n            color=\"textSecondary\"\r\n            className={props.selectProps.classes.placeholder}\r\n            {...props.innerProps}\r\n        >\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport function SingleValue(props) {\r\n    return (\r\n        <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport function ValueContainer(props) {\r\n    return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nexport function MultiValue(props) {\r\n    return (\r\n        <Chip\r\n            tabIndex={-1}\r\n            label={props.children}\r\n            className={classNames(props.selectProps.classes.chip, {\r\n                [props.selectProps.classes.chipFocused]: props.isFocused,\r\n            })}\r\n            onDelete={props.removeProps.onClick}\r\n            deleteIcon={<CancelIcon {...props.removeProps} />}\r\n        />\r\n    );\r\n}\r\n\r\nexport function Menu(props) {\r\n    return (\r\n        <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n            {props.children}\r\n        </Paper>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n//Material UI core and icons\r\nimport {\r\n    Snackbar, SnackbarContent, TextField, NoSsr, Dialog, DialogActions, DialogTitle, DialogContent, DialogContentText,\r\n    Paper, Icon, IconButton, MenuItem, Fab, Button\r\n} from '@material-ui/core'\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\n// third party\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport Autosuggest from 'react-autosuggest';\r\nimport Select1 from 'react-select';\r\nimport {Control,Menu, SingleValue, Placeholder, ValueContainer, inputComponent,NoOptionsMessage,Option, useStyles} from './selectUtils';\r\n\r\n//Store\r\nimport {bindActionCreators} from \"redux\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport * as Actions from 'store/actions';\r\nimport keycode from \"keycode\";\r\n\r\n//Utility\r\nimport {NumberFormatCustom, escapeRegexCharacters, NumberFormatCustom1, NumberFormatCustomPercent, NumberFormatCustom2} from '../../../../services/utils'\r\nimport {emphasize} from \"@material-ui/core/styles/colorManipulator\";\r\n\r\n\r\n//Snackbar\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\nconst styles1 = theme => ({\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing.unit,\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n    const { classes, className, message, onClose, variant, ...other } = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={classNames(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    className={classes.close}\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon className={classes.icon} />\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\r\n\r\nlet counter = 0;\r\n\r\nfunction createFranchisee(parent_id,id, fnumber=\"\", name=\"\", amount=0) {\r\n    return {\r\n        id: parent_id,\r\n        fid: id,\r\n        fnumber,\r\n        name,\r\n        amount,\r\n        type: 'franch'\r\n    }\r\n}\r\n\r\nfunction createData(billing='Regular Billing', service='Adjust-Balance', description='', quantity='', amount='', tax=0, markup='', extended=0, total=0, markupAmount=0, markupTax=0)\r\n{\r\n    return {\r\n        id: counter++,\r\n        billing,\r\n        service,\r\n        description,\r\n        quantity,\r\n        amount,\r\n        tax,\r\n        markup,\r\n        markupAmount,\r\n        markupTax,\r\n        extended,\r\n        total,\r\n        franchisees: [],\r\n        type: 'line'\r\n    };\r\n}\r\n\r\nfunction renderInputComponent(inputProps) {\r\n    const { classes, inputRef = () => {}, ref, ...other } = inputProps;\r\n\r\n    return (\r\n        <TextField\r\n            fullWidth\r\n            InputProps={{\r\n                inputRef: node => {\r\n                    ref(node);\r\n                    inputRef(node);\r\n                },\r\n                classes: {\r\n                    input: classes.input,\r\n                }\r\n            }}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nconst styles = theme => ({\r\n    root        : {\r\n        width    : '100%',\r\n        marginTop: theme.spacing.unit,\r\n        head: {\r\n            color: 'black',\r\n        },\r\n        '& .ReactTable .rt-thead.-headerGroups': {\r\n            display: 'none'\r\n        },\r\n        '& .ReactTable .rt-tbody': {\r\n            overflowY: 'scroll',\r\n            overflowX: 'hidden'\r\n        },\r\n        '& .ReactTable .rt-tr-group':{\r\n            flex: '0 0 auto'\r\n        },\r\n        '& .ReactTable .rt-td':{\r\n            padding: '0 5px'\r\n        },\r\n        '& .ReactTable .rt-thead .rt-th:nth-child(1)': {\r\n            justifyContent: 'center'\r\n        },\r\n        '& .ReactTable .rt-thead .rt-th:last-child': {\r\n            justifyContent: 'flex-end'\r\n        },\r\n        '& .franchiRow': {\r\n            '& .f1': {\r\n                width: '100px',\r\n                minWidth: 100,\r\n                padding: '0 10px',\r\n                border: '1px solid lightgray',\r\n                borderRadius: 6,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                marginTop: 4,\r\n                height: 32\r\n            },\r\n            '& .f2': {\r\n                width: '100%',\r\n                padding: '4px 8px',\r\n                border: '0px solid lightgray',\r\n                borderRadius: 6,\r\n                marginLeft: 10\r\n            }\r\n        },\r\n        '& .taxColumn': {\r\n            maxWidth: '160px!important'\r\n        },\r\n        InvoiceLineHeadRoot:{\r\n            backgroundColor: 'lightgray',\r\n        },\r\n        selectRoot:{\r\n            backgroundColor: 'green'\r\n        }\r\n    },\r\n    outlined: {\r\n        padding: \"6px 24px 6px 12px!important\"\r\n    },\r\n    billing:{\r\n        width: 170,\r\n        fontSize: '1.3rem'\r\n    },\r\n    services:{\r\n        width: 180,\r\n        fontSize: '1.3rem'\r\n    },\r\n    dropdownMenu:{\r\n        '& li':{\r\n            fontSize: 12,\r\n            height: 12,\r\n        }\r\n    },\r\n    lineButton: {\r\n        width: 24,\r\n        height: 24,\r\n        minHeight: 24,\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: 24,\r\n            height: 24,\r\n            minHeight: 24,\r\n        },\r\n        '& .material-icons':{\r\n            fontSize: 16\r\n        }\r\n    },\r\n    lineCancelButton:{\r\n        width: 24,\r\n        height: 24,\r\n        minHeight: 24,\r\n        backgroundColor: '#ff4850',\r\n        color: 'white',\r\n        '&:hover':{\r\n            backgroundColor: '#ff2a32',\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: 24,\r\n            height: 24,\r\n            minHeight: 24,\r\n            padding: 0\r\n        },\r\n        '& .material-icons':{\r\n            fontSize: 16\r\n        }\r\n    },\r\n    distribution: {\r\n        '& span': {\r\n            backgroundColor: 'lightgrey',\r\n            padding: '6px 12px',\r\n            borderRadius: 20\r\n        }\r\n    },\r\n    tableTheadRow:{\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    input: {\r\n        fontSize: 13\r\n    },\r\n    fInput: {\r\n        width: '96%',\r\n        marginLeft: 15,\r\n        '& input': {\r\n            fontSize: 13,\r\n            textAlign: 'right',\r\n        }\r\n    },\r\n    container: {\r\n        position: 'relative',\r\n        width: '100%'\r\n    },\r\n    suggestionsContainerOpen: {\r\n        position: 'fixed',\r\n        zIndex: 100,\r\n        marginTop: theme.spacing.unit,\r\n        maxHeight: 200,\r\n        overflowY: 'scroll',\r\n        backgroundColor: 'white',\r\n        borderRadius: 6,\r\n        border: '1px solid lightgray'\r\n    },\r\n    suggestion: {\r\n        display: 'block',\r\n    },\r\n    suggestionsList: {\r\n        margin: 0,\r\n        padding: 0,\r\n        listStyleType: 'none',\r\n    },\r\n    root1: {\r\n        flexGrow: 1,\r\n    },\r\n    input1: {\r\n        display: 'flex',\r\n        padding: 0,\r\n    },\r\n    valueContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n        '&+div':{\r\n\r\n        }\r\n    },\r\n    chip: {\r\n        margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`,\r\n    },\r\n    chipFocused: {\r\n        backgroundColor: emphasize(\r\n            theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n            0.08,\r\n        ),\r\n    },\r\n    noOptionsMessage: {\r\n        padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n    },\r\n    singleValue: {\r\n        fontSize: 12,\r\n    },\r\n    placeholder: {\r\n        position: 'absolute',\r\n        left: 6,\r\n        fontSize: 12,\r\n    },\r\n    paper: {\r\n        position: 'fixed',\r\n        zIndex: '9999!important',\r\n        marginTop: theme.spacing.unit,\r\n        fontSize: 12\r\n    },\r\n    divider: {\r\n        height: theme.spacing.unit * 2,\r\n    },\r\n    billingSuggestion:{\r\n        '& >div':{\r\n            width: '100%'\r\n        }\r\n    }\r\n});\r\n\r\nfunction renderSuggestion (suggestion,  { isHighlighted }) {\r\n    return (\r\n        <MenuItem selected={isHighlighted} component=\"div\">\r\n            <span>{suggestion.Number} - {suggestion.Name}</span>\r\n        </MenuItem>\r\n    );\r\n}\r\n\r\nclass InvoiceLineTable extends React.Component {\r\n    state = {\r\n        order      : 'asc',\r\n        selected   : [],\r\n        data       :  this.props.invoiceForm.type === 'new' ? [\r\n            createData({label: this.props.billingLists[0].Name, value:this.props.billingLists[0].BillingTypeId}, \"Adjust-Balance\", '',''),\r\n        ] : [],\r\n        page       : 0,\r\n        rowsPerPage: 10,\r\n        labelWidth: 0,\r\n        openSnack: false,\r\n        snackMessage: 'Please fill the data',\r\n        nameValue0: '',\r\n        nameValue1: '',\r\n        nameValue2: '',\r\n        nameValue3: '',\r\n        nameValue4: '',\r\n        nameValue5: '',\r\n        nameValue6: '',\r\n        nameValue7: '',\r\n        nameValue8: '',\r\n        nameValue9: '',\r\n        nameValue10: '',\r\n        nameValue11: '',\r\n        nameValue12: '',\r\n        nameValue13: '',\r\n        nameValue14: '',\r\n        nameValue15: '',\r\n        nameValue16: '',\r\n        nameValue17: '',\r\n        nameValue18: '',\r\n        nameValue19: '',\r\n        nameValue20: '',\r\n        nameSuggestions: [],\r\n        numberSuggestions: [],\r\n        taxRowId: 0,\r\n        customerTaxAmountLine: null,\r\n        selectedBillingOption0: {label: this.props.billingLists[0].Name, value:this.props.billingLists[0].BillingTypeId},selectedBillingOption1: null,selectedBillingOption2: null,selectedBillingOption3: null,\r\n        selectedBillingOption4: null,selectedBillingOption5: null,selectedBillingOption6: null,selectedBillingOption7: null,\r\n        selectedBillingOption8: null,selectedBillingOption9: null,selectedBillingOption10: null,selectedBillingOption11: null,\r\n        selectedBillingOption12: null,selectedBillingOption13: null,selectedBillingOption14: null,selectedBillingOption15: null,\r\n        selectedServiceOption0: null,selectedServiceOption1: null,selectedServiceOption2: null,selectedServiceOption3: null,\r\n        selectedServiceOption4: null,selectedServiceOption5: null,selectedServiceOption6: null,selectedServiceOption7: null,\r\n        selectedServiceOption8: null,selectedServiceOption9: null,selectedServiceOption10: null,selectedServiceOption11: null,\r\n        selectedServiceOption12: null,selectedServiceOption13: null,selectedServiceOption14: null,selectedServiceOption15: null,\r\n        bTaxAlert: false,\r\n        bTaxAlertReduction: false,\r\n        bAllowAlertReduction: false,\r\n        billingSuggestions: this.props.billingLists.map(b => ({\r\n            value: b.BillingTypeId, label: b.Name})),\r\n        serviceSuggestions: this.props.serviceLists.map(s=>({\r\n            BillingTypeId: s.BillingTypeId, label: s.Name, value: s.Name\r\n        }))\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // this.addInvoiceLineFunction = this.addInvoiceLineFunction.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.updateInvoiceLine(this.state.data);\r\n    }\r\n    componentWillUnmount() {\r\n        // document.removeEventListener(\"keydown\", this.addInvoiceLineFunction, false);\r\n    }\r\n\r\n    addInvoiceLineFunction(event){\r\n        if(keycode(event)==='enter' || keycode(event)==='down'){\r\n            // this.addLineData();\r\n        }\r\n    }\r\n\r\n    handleChangeBilling = (event, n) => {\r\n        let newData = this.state.data.map(row=>{\r\n            let temp = row;\r\n            if(n.id===row.id){\r\n                temp[event.target.name] = event.target.value\r\n            }\r\n            return temp;\r\n        });\r\n\r\n        this.setState({data: newData})\r\n    };\r\n\r\n    componentDidMount(){\r\n        document.addEventListener(\"keydown\", this.addInvoiceLineFunction, false);\r\n        if(this.props.invoiceForm.type === 'new') {\r\n            let id = 0;\r\n            const data = [...this.state.data];\r\n            let newData = data.map(record=>{\r\n                record.id = id++;\r\n                return record;\r\n            });\r\n            this.setState({data: newData});\r\n        }\r\n        else {//For Edit\r\n            console.log('edit');\r\n            let items = this.props.invoiceDetail.Data.Items;\r\n\r\n            let billingSuggestions = this.props.billingLists.map(b => ({\r\n                value: b.BillingTypeId, label: b.Name}));\r\n\r\n            let serviceSuggestions = this.props.serviceLists.map(s=>({\r\n                label: s.Name, value: s.Name\r\n            }));\r\n\r\n            if(items.length>0){\r\n                let newData = items.map((item, index)=>{\r\n                    let billing = billingSuggestions.filter(b=>b.value===parseInt(item.Billing));\r\n                    this.setState({[`selectedBillingOption${index}`]: billing[0]});\r\n\r\n                    let service = serviceSuggestions.filter(s=>s.value===item.Service);\r\n                    if(service.length)\r\n                        this.setState({[`selectedServiceOption${index}`]: service[0].label});\r\n\r\n                    let line = createData(billing[0], service.length ? service[0].label : '', item.Description, item.Quantity, item.UnitPrice, item.TaxRate, 5, item.ExtendedPrice, item.Total, item.MarkUpTotal);\r\n                    let distributions = [];\r\n                    if(item.Distribution.length>0){\r\n                        distributions = item.Distribution.map((d,fid)=>{\r\n                            return {id: index, fid, fnumber: d.FranchiseeNumber, amount: d.Amount, name: d.name, type: 'franch'}\r\n                        })\r\n                    }\r\n                    line.franchisees = distributions;\r\n\r\n                    return line;\r\n                });\r\n\r\n                this.setState({data: newData});\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        if(this.state.data!==null && prevState.data!==this.state.data) {\r\n            this.props.updateInvoiceLine(this.state.data);\r\n        }\r\n        if(JSON.stringify(this.state.customerTaxAmountLine)!== JSON.stringify(prevState.customerTaxAmountLine)){\r\n            this.updateTaxFromLine();\r\n        }\r\n\r\n        if(this.props.fn!==null && prevProps.fn!==this.props.fn){\r\n            let selectedFranchiess =[];\r\n            let franchisees = this.props.franchisees.Data.Region[0].FranchiseeList;\r\n            this.props.fn.forEach(f=>{\r\n                selectedFranchiess = _.filter(franchisees, franchisee=>f.Number===franchisee.Number && f.Name===franchisee.Name);\r\n            });\r\n\r\n            //in case of selection any customer from auto suggestion\r\n            if(selectedFranchiess.length>0) {\r\n                const data = [...this.state.data];\r\n\r\n                let f_row = data[0];\r\n\r\n                let findex = 0;\r\n                selectedFranchiess.forEach(sf=>{\r\n                    let fline = createFranchisee(0, findex, sf.Number, sf.Name, sf.DistributionAmount);\r\n                    f_row.franchisees = [...f_row.franchisees, fline];\r\n                    this.setState({[\"nameValue\"+findex]: sf.Name});\r\n                    findex++;\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(JSON.stringify(this.props.customerTaxAmountLine)!==JSON.stringify(nextProps.customerTaxAmountLine)){\r\n            this.setState({customerTaxAmountLine: nextProps.customerTaxAmountLine})\r\n        }\r\n\r\n        //for save & add more\r\n        if(nextProps.invoiceForm.data===null && JSON.stringify(nextProps.invoiceForm.data)!==JSON.stringify(this.props.invoiceForm.data)){\r\n            let newData = createData({label: this.props.billingLists[0].Name, value:this.props.billingLists[0].BillingTypeId}, \"Adjust-Balance\", '','');\r\n            this.setState({data: [{...newData, id: 0}]});\r\n        }\r\n    }\r\n\r\n    updateTaxFromLine = ()=> {\r\n        const data = [...this.state.data];\r\n        const {taxRowId, customerTaxAmountLine} = this.state;\r\n        data[taxRowId].tax = customerTaxAmountLine.TotalTaxAmount;\r\n        data[taxRowId].extended = customerTaxAmountLine.ExtendedPrice;\r\n        data[taxRowId].total = customerTaxAmountLine.TotalAmount;\r\n        data[taxRowId].markupAmount = customerTaxAmountLine.MarkupAmount;\r\n        data[taxRowId].markupTax = customerTaxAmountLine.MarkupTax;\r\n        this.setState({data: data});\r\n        this.setState({bAllowAlertReduction: true});\r\n    };\r\n\r\n    // For Franchisee suggestion\r\n    getSuggestions = (value) => {\r\n        const escapedValue = escapeRegexCharacters(value.trim());\r\n        const regex = new RegExp('^' + escapedValue, 'i');\r\n\r\n        let franchisees = this.props.franchisees.Data.Region[0].FranchiseeList;\r\n        return franchisees.filter(f => regex.test(f.Number) || regex.test(f.Name));\r\n    };\r\n\r\n    getSuggestionfName = (suggestion) => {\r\n        return suggestion.Name;\r\n    };\r\n\r\n    onNameChange = row =>(event, { newValue }) => {\r\n        this.setState({\r\n            [\"nameValue\"+row.f_index]: newValue\r\n        });\r\n        const data = [...this.state.data];\r\n        data[row.id].franchisees[row.fid].name = newValue;\r\n        this.setState({data: data});\r\n    };\r\n\r\n    onNameSuggestionsFetchRequested = ({ value }) => {\r\n        this.setState({\r\n            nameSuggestions: this.getSuggestions(value)\r\n        });\r\n    };\r\n\r\n    onNameSuggestionsClearRequested = () => {\r\n        this.setState({\r\n            nameSuggestions: []\r\n        });\r\n    };\r\n\r\n    onNameSuggestionSelected = row => (event, { suggestion }) => {\r\n        const data = [...this.state.data];\r\n        data[row.id].franchisees[row.fid].fnumber = suggestion.Number;\r\n        this.setState({data: data});\r\n    };\r\n\r\n    handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        this.setState({ openSnack: false });\r\n    };\r\n\r\n    handleTaxAlertClose = () => {\r\n        this.setState({ bTaxAlert: false });\r\n    };\r\n\r\n    handleTaxAlertReductionClose = () => {\r\n        this.setState({ bTaxAlertReduction: false });\r\n    };\r\n\r\n    addLineData=(row)=>{\r\n        if(this.props.invoiceForm.customer===null) {\r\n            this.setState({snackMessage: 'Please choose customer from Invoice suggestion'});\r\n            this.setState({openSnack: true});\r\n            return;\r\n        }\r\n\r\n        if(row.description==='') {\r\n            this.setState({snackMessage: 'Please enter description'});\r\n            this.setState({openSnack: true});\r\n            return;\r\n        }\r\n\r\n        if(row.quantity==='') {\r\n            this.setState({snackMessage: 'Please enter quantity'});\r\n            this.setState({openSnack: true});\r\n            return;\r\n        }\r\n\r\n        if(row.amount==='') {\r\n            this.setState({snackMessage: 'Please enter amount'});\r\n            this.setState({openSnack: true});\r\n            return;\r\n        }\r\n\r\n        const data = [...this.state.data, createData({label: this.props.billingLists[0].Name, value:this.props.billingLists[0].BillingTypeId})];\r\n        this.setState({\r\n            [\"selectedBillingOption\"+parseInt(data.length-1)]: {label: this.props.billingLists[0].Name, value:this.props.billingLists[0].BillingTypeId}\r\n        });\r\n\r\n        let id = 0;\r\n        let newData = data.map(record=>{\r\n            record.id = id++;\r\n            return record;\r\n        });\r\n        this.setState({data: newData})\r\n    };\r\n\r\n    addFranchiseeLine = (n) =>{\r\n        const data = [...this.state.data];\r\n        let fline = createFranchisee(n.id, n.franchisees.length);\r\n        n.franchisees = [...n.franchisees, fline];\r\n\r\n        let newData = data.map(record=>{\r\n            if(record.id===n.id)\r\n                record = n;\r\n            return record;\r\n        });\r\n        this.setState({data: newData})\r\n    };\r\n\r\n    removeLineData=(line)=>{\r\n        const data = [...this.state.data];\r\n        _.remove(data, function (row) {\r\n            return row.id === line.id;\r\n        });\r\n        let id = 0;\r\n        let newData = data.map(record=>{\r\n            record.id = id++;\r\n            return record;\r\n        });\r\n\r\n        this.setState({data: newData})\r\n    };\r\n\r\n    removeFranch=(row)=>{\r\n        const data = [...this.state.data];\r\n\r\n        data.forEach(d=>{\r\n            if(d.franchisees.length>0 && d.id===row.id){\r\n                let franchisees = d.franchisees;\r\n                _.remove(franchisees, function (record) {\r\n                    return record.fid === row.fid\r\n                })\r\n            }\r\n        });\r\n\r\n        data.forEach(d=>{\r\n            if(d.franchisees.length>0 && d.id===row.fid){\r\n                let fid=0;\r\n                let franchisees = d.franchisees;\r\n                let newData = franchisees.map(record=>{\r\n                    record.fid = fid++;\r\n                    return record;\r\n                });\r\n                d.franchisees = newData\r\n            }\r\n        });\r\n        this.setState({data: data});\r\n        this.setState({['nameValue'+row.f_index]: ''})\r\n    };\r\n\r\n    getInvoiceLineTaxAmount = row =>{\r\n        if(!this.isDisable(row)) {\r\n            let markup = 0.0;\r\n            if(row.markup!=='') markup = row.markup;\r\n            this.props.getCustomerTaxAmount(this.props.regionId, this.props.invoiceForm.customer.CustomerId, row.amount, row.quantity, markup);\r\n            this.setState({taxRowId: row.id})\r\n        }\r\n    };\r\n\r\n    handleChange = row => event => {\r\n        const data = [...this.state.data];\r\n        data[row.id].franchisees[row.fid].amount = parseFloat(event.target.value);\r\n        this.setState({data: data});\r\n    };\r\n\r\n    handleChangeDesc = row => event => {\r\n        const data = [...this.state.data];\r\n        data[row.id].description = event.target.value;\r\n        this.setState({data: data});\r\n    };\r\n\r\n    handleChangeInvoiceLine = (row, name) => event => {\r\n        const data = [...this.state.data];\r\n        let value = event.target.value;\r\n        if (name==='amount')  value = parseFloat(value);\r\n        if (name==='quantity')  value = parseInt(value);\r\n\r\n        data[row.id][name] = value;\r\n        this.setState({data: data});\r\n\r\n        if(!this.isDisable(row) && name!=='tax')\r\n            this.getInvoiceLineTaxAmount(row)\r\n    };\r\n\r\n    handleChangeInvoiceTaxLine = (row, name) => event => {\r\n        const data = [...this.state.data];\r\n        if(this.props.invoiceForm.customer===null) return;\r\n\r\n        if(this.props.invoiceForm.customer.TaxExempt==='N' && name==='tax' && parseFloat(event.target.value)===0) {\r\n            this.setState({bTaxAlert: true});\r\n            return;\r\n        }\r\n        if(this.state.bAllowAlertReduction && this.props.invoiceForm.customer.TaxExempt==='N' && name==='tax' && parseFloat(event.target.value)!==0 &&\r\n            parseFloat(event.target.value)<parseFloat(data[row.id][name])\r\n        ) {\r\n            // this.setState({bTaxAlertReduction: true});\r\n            // return;\r\n        }\r\n\r\n        data[row.id][name] = event.target.value;\r\n        this.setState({data: data});\r\n\r\n        if(!this.isDisable(row) && name!=='tax')\r\n            this.getInvoiceLineTaxAmount(row)\r\n    };\r\n\r\n    isDisable = row =>{\r\n        if(this.props.invoiceForm.customer===null) {\r\n            this.setState({snackMessage: 'Please choose customer from Invoice suggestion'});\r\n            this.setState({openSnack: true});\r\n            return true;\r\n        }\r\n        if(row.quantity==='') return true;\r\n        if(row.amount==='') return true;\r\n    };\r\n\r\n    handleBillingChange = (newValue, row) => {\r\n        this.setState({\r\n            [\"selectedBillingOption\"+row.id]: newValue\r\n        });\r\n        const data = [...this.state.data];\r\n        data[row.id].billing = newValue;\r\n        this.setState({data: data});\r\n    };\r\n\r\n    handleServiceChange = (newValue, row) => {\r\n        this.setState({\r\n            [\"selectedServiceOption\"+row.id]: newValue\r\n        });\r\n        const data = [...this.state.data];\r\n        data[row.id].service = newValue;\r\n        this.setState({data: data});\r\n    };\r\n\r\n    render()\r\n    {\r\n        const {classes} = this.props;\r\n        const {data} = this.state;\r\n\r\n        const components = {\r\n            Control,\r\n            Menu,\r\n            NoOptionsMessage,\r\n            Option,\r\n            Placeholder,\r\n            SingleValue,\r\n            ValueContainer,\r\n        };\r\n\r\n        const selectStyles = {\r\n            input: base => ({\r\n                ...base,\r\n                // color: ,\r\n                '& input': {\r\n                    font: 'inherit',\r\n                },\r\n            }),\r\n        };\r\n\r\n        const {\r\n            nameSuggestions,\r\n        } = this.state;\r\n\r\n        let all_data = [];\r\n\r\n        let f_index = 0;\r\n        data.forEach(d=>{\r\n            if(d.franchisees.length===0) return all_data.push(d);\r\n            let franchisees = d.franchisees;\r\n            all_data.push(d);\r\n            franchisees.forEach(f=>{\r\n                all_data.push({f_index: f_index++,...f});\r\n            });\r\n        });\r\n\r\n        let billingSuggestions = [];\r\n        if(this.props.billingLists!==null && this.props.billingLists.length>0) {\r\n            billingSuggestions = this.props.billingLists.map(b => ({\r\n                value: b.BillingTypeId, label: b.Name\r\n            }));\r\n        }\r\n\r\n        const serviceSuggestions =this.props.serviceLists.map(suggestion => ({\r\n            value: suggestion.Name,\r\n            label: suggestion.Name\r\n        }));\r\n\r\n        console.log('state====', this.state);\r\n\r\n        return (\r\n            <Paper className={classNames(classes.root)}>\r\n                <div className={classNames(classes.tableWrapper, \"flex flex-col h-full\")}>\r\n                    <ReactTable\r\n                        data={all_data}\r\n                        minRows = {0}\r\n                        showPagination ={false}\r\n                        getTheadThProps={(state, rowInfo, column, instance) =>{\r\n                            let border = '1px solid rgba(255,255,255,.6)';\r\n                            if(column.Header==='Action') border = 'none';\r\n\r\n                            return {\r\n                                style:{\r\n                                    fontSize: 13,\r\n                                    fontFamily: 'Muli,Roboto,\"Helvetica\",Arial,sans-serif',\r\n                                    fontWeight: 400,\r\n                                    lineHeight: 2.0,\r\n                                    color: 'white',\r\n                                    borderRight: border\r\n                                },\r\n                            }\r\n                        }}\r\n                        getTheadProps={(state, rowInfo, column, instance) =>{\r\n                            return {\r\n                                style:{\r\n                                    fontSize: 13,\r\n                                },\r\n                                className: classes.tableTheadRow\r\n                            }\r\n                        }}\r\n                        getTdProps={(state, rowInfo, column, instance) =>{\r\n                            if(rowInfo.original.type==='franch'){\r\n                                if(column.Header==='Qty' || column.Header==='Amount' || column.Header==='Markup(%)')\r\n                                    return {\r\n                                        style: {display: 'none'},\r\n                                        className: {}\r\n                                    };\r\n                                return {\r\n                                    className: classNames(\r\n                                        {\"justify-end\": column.Header==='Service'},\r\n                                        {\"justify-start\": column.id==='extended'},\r\n                                        {\"franchiRow\": column.id==='description'},\r\n                                        {\"taxColumn\": column.id==='tax'},\r\n                                    )\r\n                                };\r\n                            }\r\n                            else\r\n                                return {\r\n                                    className: classNames(\r\n                                        {\"justify-end\": column.id==='extended'},\r\n                                        {\"justify-end\": rowInfo.original.type!=='line'})\r\n                                }\r\n                        }}\r\n                        columns={[\r\n                            {\r\n                                columns: [\r\n                                    {\r\n                                        Header: \"Billing\",\r\n                                        accessor: \"billing\",\r\n                                        Cell: row=>{\r\n                                            if(row.original.type==='line')\r\n                                                return (\r\n                                                    <div className={classes.root1}>\r\n                                                        <NoSsr>\r\n                                                            <Select1\r\n                                                                classes={classes}\r\n                                                                styles={selectStyles}\r\n                                                                value={this.state[\"selectedBillingOption\"+row.original.id]}\r\n                                                                components={components}\r\n                                                                onChange={(v)=>this.handleBillingChange(v, row.original)}\r\n                                                                options={billingSuggestions}\r\n                                                                placeholder=\"Select a billing\"\r\n                                                            />\r\n                                                        </NoSsr>\r\n                                                    </div>\r\n                                                );\r\n                                            else\r\n                                                return (<div/>)\r\n                                        },\r\n                                        width: 200,\r\n                                        className: classNames(classes.billingSuggestion, \"flex items-center justify-center\"),\r\n                                    },\r\n                                    {\r\n                                        Header: \"Service\",\r\n                                        accessor: \"service\",\r\n                                        Cell: row=>{\r\n                                            if(row.original.type==='line')\r\n                                                return (\r\n                                                    <div className={classes.root1}>\r\n                                                        <NoSsr>\r\n                                                            <Select1\r\n                                                                classes={classes}\r\n                                                                styles={selectStyles}\r\n                                                                value={this.state['selectedServiceOption'+row.original.id]}\r\n                                                                components={components}\r\n                                                                onChange={(v)=>this.handleServiceChange(v, row.original)}\r\n                                                                options={serviceSuggestions}\r\n                                                                placeholder=\"Select a service\"\r\n                                                            />\r\n                                                        </NoSsr>\r\n                                                    </div>\r\n                                                );\r\n                                            else\r\n                                                return (<div className={classNames(classes.distribution)}><span>Distribution</span></div>)\r\n                                        },\r\n                                        width: 200,\r\n                                        className: classNames(classes.tableTdEven, \"flex items-center\"),\r\n                                    },\r\n                                    {\r\n                                        Header: \"Description\",\r\n                                        accessor: \"description\",\r\n                                        Cell: row=>{\r\n                                            if(row.original.type==='line') {\r\n                                                return (\r\n                                                    <TextField\r\n                                                        id=\"description\"\r\n                                                        style={{ margin: 8 }}\r\n                                                        placeholder=\"Description\"\r\n                                                        fullWidth\r\n                                                        value={row.original.description}\r\n                                                        onChange={this.handleChangeDesc(row.original)}\r\n                                                        margin=\"normal\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                        }}\r\n                                                        InputProps={{\r\n                                                            classes: {\r\n                                                                input: classes.input,\r\n                                                            },\r\n                                                        }}\r\n                                                    />\r\n                                                )\r\n                                            }\r\n                                            else\r\n                                                return (\r\n                                                    <div className={classNames(\"flex flex-row w-full justify-start\")}>\r\n                                                        <div className=\"f1\">\r\n                                                            {row.original.fnumber}\r\n                                                        </div>\r\n                                                        <div className=\"f2\">\r\n                                                            <Autosuggest\r\n                                                                renderInputComponent = {renderInputComponent}\r\n                                                                suggestions={nameSuggestions}\r\n                                                                onSuggestionsFetchRequested={this.onNameSuggestionsFetchRequested}\r\n                                                                onSuggestionsClearRequested={this.onNameSuggestionsClearRequested}\r\n                                                                onSuggestionSelected={this.onNameSuggestionSelected(row.original)}\r\n                                                                getSuggestionValue={this.getSuggestionfName}\r\n                                                                renderSuggestion={renderSuggestion}\r\n                                                                inputProps={\r\n                                                                    {\r\n                                                                        classes,\r\n                                                                        placeholder: \"Search Franchisee Name or Number\",\r\n                                                                        value: this.state['nameValue'+row.original.f_index],\r\n                                                                        onChange: this.onNameChange(row.original)\r\n                                                                    }\r\n                                                                }\r\n                                                                theme={{\r\n                                                                    container: classNames(classes.container),\r\n                                                                    suggestionsContainerOpen: classes.suggestionsContainerOpen,\r\n                                                                    suggestionsList: classes.suggestionsList,\r\n                                                                    suggestion: classes.suggestion,\r\n                                                                }}\r\n                                                                renderSuggestionsContainer={options => (\r\n                                                                    <Paper {...options.containerProps} square>\r\n                                                                        {options.children}\r\n                                                                    </Paper>\r\n                                                                )}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                        },\r\n                                    },\r\n                                    {\r\n                                        Header: \"Qty\",\r\n                                        accessor: \"quantity\",\r\n                                        Cell: row=>{\r\n                                            if(row.original.type==='line') {\r\n                                                return <TextField\r\n                                                    className={classes.fInput}\r\n                                                    placeholder=\"Qty\"\r\n                                                    value={row.original.quantity}\r\n                                                    onBlur={this.handleChangeInvoiceLine(row.original, 'quantity')}\r\n                                                    InputProps={{\r\n                                                        inputComponent: NumberFormatCustom1,\r\n                                                        classes: {\r\n                                                            input: classes.input,\r\n                                                        },\r\n                                                    }}\r\n                                                />\r\n                                            }\r\n                                            else\r\n                                                return (<div/>)\r\n                                        },\r\n                                        className: classNames(classes.tableTdEven, \"flex items-center  justify-center text-center\"),\r\n                                        width: 60\r\n                                    },\r\n                                    {\r\n                                        Header: \"Amount\",\r\n                                        accessor: \"amount\",\r\n                                        Cell: row=>{\r\n                                            if(row.original.type==='line'){\r\n                                                return <TextField\r\n                                                    className={classes.fInput}\r\n                                                    placeholder=\"Amount\"\r\n                                                    value={row.original.amount}\r\n                                                    onBlur={this.handleChangeInvoiceLine(row.original, 'amount')}\r\n                                                    InputProps={{\r\n                                                        inputComponent: NumberFormatCustom2,\r\n                                                        classes: {\r\n                                                            input: classes.input,\r\n                                                        },\r\n                                                    }}\r\n                                                />\r\n                                            }\r\n                                            else\r\n                                                return (<div/>)\r\n                                        },\r\n                                        className: classNames(classes.tableTdEven, \"flex items-center  justify-center text-right\"),\r\n                                        width: 100\r\n                                    },\r\n                                    {\r\n                                        Header: \"Tax\",\r\n                                        accessor: \"tax\",\r\n                                        Cell: row=>{\r\n                                            if(row.original.type==='line') {\r\n                                                return <TextField\r\n                                                    className={classes.fInput}\r\n                                                    placeholder=\"Tax\"\r\n                                                    value={row.original.tax}\r\n                                                    onChange={this.handleChangeInvoiceTaxLine(row.original, 'tax')}\r\n                                                    InputProps={{\r\n                                                        inputComponent: NumberFormatCustom,\r\n                                                        classes: {\r\n                                                            input: classes.input,\r\n                                                        },\r\n                                                    }}\r\n                                                />\r\n                                            }\r\n                                            else\r\n                                                return ( <div className={classNames(\"flex flex-row w-full justify-end\")}>\r\n                                                    <TextField\r\n                                                        className={classes.fInput}\r\n                                                        placeholder=\"Amount\"\r\n                                                        value={row.original.amount}\r\n                                                        onChange={this.handleChange(row.original)}\r\n                                                        InputProps={{\r\n                                                            inputComponent: NumberFormatCustom,\r\n                                                        }}\r\n                                                    />\r\n                                                </div>)\r\n                                        },\r\n                                        className: classNames(classes.tableTdEven, \"flex items-center  justify-end text-right\"),\r\n                                        width: 80\r\n                                    },\r\n                                    {\r\n                                        Header: \"Markup(%)\",\r\n                                        accessor: \"markup\",\r\n                                        Cell: row=>{\r\n                                            if(row.original.type==='line') {\r\n                                                return <TextField\r\n                                                    className={classes.fInput}\r\n                                                    placeholder=\"Markup\"\r\n                                                    value={row.original.markup}\r\n                                                    onChange={this.handleChangeInvoiceLine(row.original, 'markup')}\r\n                                                    InputProps={{\r\n                                                        inputComponent: NumberFormatCustomPercent,\r\n                                                        readOnly: row.original.billing.value!==2,\r\n                                                        classes: {\r\n                                                            input: classes.input,\r\n                                                        },\r\n                                                    }}\r\n                                                />\r\n                                            }\r\n                                            else\r\n                                                return (\r\n                                                    <div/>)\r\n                                        },\r\n                                        className: classNames(classes.tableTdEven, \"flex items-center  text-right justify-end\"),\r\n                                        width: 80\r\n                                    },\r\n                                    {\r\n                                        Header: \"Ext. Amount\",\r\n                                        accessor: \"extended\",\r\n                                        Cell: row=>{\r\n                                            if(row.original.type==='line') {\r\n                                                let markup = 0.0;\r\n                                                if(row.original.markup!=='') markup = row.original.markup;\r\n                                                return (\"$\" + parseFloat(row.original.total * (1 + parseFloat(markup) / 100)).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,'));\r\n                                            }\r\n                                            else\r\n                                                return (\r\n                                                    <Fab aria-label=\"remove\"\r\n                                                         onClick={()=>this.removeFranch(row.original)}\r\n                                                         className={classNames(classes.lineCancelButton, \"mr-12\")} style={{width: 24, height: 24, minHeight: 24}}>\r\n                                                        <Icon>close</Icon>\r\n                                                    </Fab>\r\n                                                )\r\n                                        },\r\n                                        className: classNames(classes.tableTdEven, \"flex items-center  w-full text-center pr-12\"),\r\n                                        width: 100\r\n                                    },\r\n                                    {\r\n                                        Header: \"Action\",\r\n                                        width: 130,\r\n                                        Cell: row=>{\r\n                                            if(row.original.type==='line')\r\n                                                return (\r\n                                                    <div className=\"flex flex-row items-center w-full justify-center\">\r\n                                                        <Fab color=\"secondary\" aria-label=\"add\"\r\n                                                             className={classNames(classes.lineButton, \"mr-8\")}\r\n                                                             onClick={()=>this.addFranchiseeLine(row.original)}\r\n                                                        >\r\n                                                            <Icon>call_merge</Icon>\r\n                                                        </Fab>\r\n                                                        <Fab color=\"secondary\" aria-label=\"add\"\r\n                                                             className={classNames(classes.lineButton, \"mr-8\")}\r\n                                                             onClick={()=>this.addLineData(row.original)}\r\n                                                        >\r\n                                                            <Icon>add</Icon>\r\n                                                        </Fab>\r\n                                                        {this.state.data.length>1 && (\r\n                                                            <Fab aria-label=\"remove\"\r\n                                                                 onClick={()=>this.removeLineData(row.original)}\r\n                                                                 className={classNames(classes.lineCancelButton, \"mr-0\")}>\r\n                                                                <Icon>close</Icon>\r\n                                                            </Fab>\r\n                                                        )}\r\n                                                    </div>\r\n                                                );\r\n                                            else\r\n                                                return (<div/>)\r\n                                        }\r\n                                    },\r\n                                ]\r\n                            }\r\n                        ]}\r\n                        className={classNames( \"-striped -highlight\")}\r\n                        defaultPageSize={200}\r\n                        style={{\r\n                            height: '100%',\r\n                        }}\r\n                    />\r\n                </div>\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    open={this.state.openSnack}\r\n                    autoHideDuration={3000}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <MySnackbarContentWrapper\r\n                        onClose={this.handleClose}\r\n                        variant=\"error\"\r\n                        message={this.state.snackMessage}\r\n                    />\r\n                </Snackbar>\r\n                <Dialog\r\n                    open={this.state.bTaxAlert}\r\n                    onClose={this.handleTaxAlertClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"Customer is not Tax Exempt\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Customer is not Tax Exempt, but will be allowed as transaction is ???\"\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleTaxAlertClose} color=\"primary\" autoFocus>\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.state.bTaxAlertReduction}\r\n                    onClose={this.handleTaxAlertReductionClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"Tax Editing is not allowed\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Tax Editing is not allowed. Tax is calculated based on Customer Tax Settings\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleTaxAlertReductionClose} color=\"primary\" autoFocus>\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nInvoiceLineTable.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch)\r\n{\r\n    return bindActionCreators({\r\n        updateInvoiceLine: Actions.updateInvoiceLine,\r\n        getCustomerTaxAmount: Actions.getCustomerTaxAmount,\r\n        getServiceLists: Actions.getServiceLists\r\n    }, dispatch);\r\n}\r\n\r\nfunction mapStateToProps({invoices, franchisees, auth})\r\n{\r\n    return {\r\n        invoiceForm: invoices.invoiceForm,\r\n        invoiceDetail: invoices.invoiceDetail,\r\n        franchisees: franchisees.franchiseesDB,\r\n        regionId: auth.login.defaultRegionId,\r\n        customerTaxAmountLine: invoices.customerTaxAmountLine,\r\n        bStartingSaveFormData: invoices.bStartingSaveFormData,\r\n        billingLists: invoices.billingLists,\r\n        serviceLists: invoices.serviceLists\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withRouter(connect(mapStateToProps, mapDispatchToProps)(InvoiceLineTable)));\r\n","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n// core components\r\nimport {\r\n    Paper, TextField, Typography, MenuItem, Card, CardHeader, CardContent, Divider, Button, Snackbar, SnackbarContent,\r\n    IconButton, Icon, Grid, FormControlLabel, Checkbox, DialogTitle, DialogContent, DialogContentText, DialogActions, Dialog\r\n} from '@material-ui/core';\r\nimport 'date-fns'\r\nimport MomentUtils from '@date-io/moment';\r\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\n\r\n// theme components\r\nimport {FuseAnimate} from '@fuse';\r\nimport {withStyles} from \"@material-ui/core\";\r\n\r\n//Custom components\r\nimport GridContainer from \"Commons/Grid/GridContainer\";\r\nimport GridItem from \"Commons/Grid/GridItem\";\r\nimport InvoiceLineTable from \"./InvoiceLine\"\r\n\r\n\r\n// for store\r\nimport {bindActionCreators} from \"redux\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport * as Actions from 'store/actions';\r\n\r\n// third party\r\nimport \"react-table/react-table.css\";\r\nimport _ from 'lodash';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport classNames from 'classnames';\r\nimport match from \"autosuggest-highlight/match\";\r\nimport parse from \"autosuggest-highlight/parse\";\r\nimport moment from 'moment'\r\nimport PropTypes from 'prop-types';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n//Utility\r\nimport {escapeRegexCharacters} from 'services/utils'\r\n\r\nconst styles = theme => ({\r\n    layoutForm: {\r\n        flexDirection: 'row',\r\n    },\r\n    button: {\r\n        '& span': {\r\n            textTransform: 'none'\r\n        }\r\n    },\r\n    card: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        position: 'relative',\r\n        width: '100%'\r\n    },\r\n    formControl: {\r\n        marginBottom: 12,\r\n        minWidth: 200,\r\n    },\r\n    textField: {\r\n        marginLeft: 0,\r\n        marginRight: theme.spacing.unit,\r\n        // padding: '0 0'\r\n    },\r\n    summary: {\r\n        fontSize: 15,\r\n        fontWeight: 700\r\n    },\r\n    suggestionsContainerOpen: {\r\n        position: 'absolute',\r\n        zIndex: 10,\r\n        marginTop: theme.spacing.unit,\r\n        left: 0,\r\n        right: 0,\r\n        maxHeight: 200,\r\n        overflowY: 'scroll'\r\n    },\r\n    suggestion: {\r\n        display: 'block',\r\n    },\r\n    suggestionsList: {\r\n        margin: 0,\r\n        padding: 0,\r\n        listStyleType: 'none',\r\n    },\r\n    divider: {\r\n        height: theme.spacing.unit * 2,\r\n    },\r\n    cardHeader: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        padding: '8px 24px',\r\n        '& span': {\r\n            color: 'white',\r\n            fontSize: 16,\r\n        }\r\n    },\r\n    cardContent: {\r\n        paddingTop: 12,\r\n        paddingBottom: '12px!important',\r\n        '& h6': {\r\n            lineHeight: 1.6,\r\n            fontSize: 14\r\n        }\r\n    },\r\n    input: {\r\n        padding: '12px 14px'\r\n    },\r\n    input1: {\r\n        padding: '12px 6px'\r\n    },\r\n\r\n    label: {\r\n        transform: 'translate(14px, 14px) scale(1)'\r\n    },\r\n    inputOrange: {\r\n        padding: '12px 14px',\r\n        color: 'orange'\r\n    },\r\n    dropdownMenu: {\r\n        '& li': {\r\n            fontSize: 12,\r\n            height: 12,\r\n        }\r\n    },\r\n    picker: {\r\n        padding: '0 6px'\r\n    }\r\n});\r\n\r\nconst newInvoiceState = {\r\n    \"MasterTrxTypeListId\": \"\",\r\n    \"RegionId\": \"\",\r\n    \"RegionName\": \"\",\r\n    \"InvoiceId\": \"\",\r\n    \"InvoiceDate\": moment().format('YYYY-MM-DD'),\r\n    \"DueDate\": moment().format('YYYY-MM-DD'),\r\n    // \"InvoiceDate\": new Date(),\r\n    // \"DueDate\": new Date(),\r\n    \"CustomerId\": \"\",\r\n    \"CustomerNo\": \"\",\r\n    \"CustomerName\": \"\",\r\n    \"EBill\": \"\",\r\n    \"PrintInvoice\": \"\",\r\n    \"InvoiceDescription\": \"\",\r\n    \"InvoiceAmount\": \"\",\r\n    \"InvoiceTax\": \"\",\r\n    \"InvoiceTotal\": \"\",\r\n    \"CPI\": \"\",\r\n    \"TransactionStatusListId\": \"\",\r\n    \"TransactionStatus\": \"\",\r\n    \"InvoiceBalanceAmount\": \"\",\r\n    \"InvoiceBalanceTax\": \"\",\r\n    \"InvoiceBalanceTotal\": \"\",\r\n    \"EBillText\": \"\",\r\n    \"PrintInvoiceText\": \"\",\r\n    \"IsOpen\": \"\",\r\n    \"ConsolidatedInvoice\": \"\",\r\n    \"ConsolidatedInvoiceId\": \"\",\r\n    \"ConsolidatedInvoiceNo\": \"\",\r\n    \"CreditId\": \"\",\r\n    \"Service\":\"\",\r\n    \"notes\": \"\",\r\n\r\n};\r\n\r\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\r\n    const matches = match(suggestion.CustomerName, query);\r\n    const parts = parse(suggestion.CustomerName, matches);\r\n\r\n    return (\r\n        <MenuItem selected={isHighlighted} component=\"div\">\r\n            <div>\r\n                {parts.map((part, index) => {\r\n                    return part.highlight ? (\r\n                        <span key={String(index)} style={{ fontWeight: 700 }}>\r\n              {part.text}\r\n            </span>\r\n                    ) : (\r\n                        <strong key={String(index)} style={{ fontWeight: 300 }}>\r\n                            {part.text}\r\n                        </strong>\r\n                    );\r\n                })}\r\n            </div>\r\n        </MenuItem>\r\n    );\r\n}\r\n\r\n//Snackbar\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\nconst styles1 = theme => ({\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing.unit,\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n    const { classes, className, message, onClose, variant, ...other } = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={classNames(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\r\n                    {message}\r\n        </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    className={classes.close}\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon className={classes.icon} />\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\r\n\r\nclass InvoiceForm extends Component {\r\n    state = {\r\n        ...newInvoiceState,\r\n        value: '',\r\n        suggestions: [],\r\n        selectedCustomer: null,\r\n        fSuggestions: [],\r\n        selectedFranchisee: null,\r\n        labelWidth: 0,\r\n        selectedWork: \"\",\r\n        total: 0.0,\r\n        subTotal: 0.0,\r\n        tax: 0,\r\n        markup: 0.0,\r\n        InvoiceNo: this.props.invoiceForm.type === 'new' ? \"PENDING\": '',\r\n        snackMessage: \"\",\r\n        openSnack: false,\r\n        PO_number: '',\r\n        period: moment(),\r\n        taxExempt: false,\r\n        bAlertNewInvoice: false,\r\n        buttonOption: 0, //0-save and add more, 1- save & close 2- submit for approval,\r\n        franchiseeFromCustomer: null\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    renderInputComponent = (inputProps ) => {\r\n        const { classes, inputRef = () => {}, ref, ...other } = inputProps ;\r\n\r\n        return (\r\n            <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                label=\"Customer:\"\r\n                InputProps={{\r\n                    inputRef: node => {\r\n                        ref(node);\r\n                        inputRef(node);\r\n                    },\r\n                    classes: {\r\n                        input: classes.input,\r\n                    },\r\n                    readOnly: this.props.invoiceForm.type !== 'new' ? true : false\r\n                }}\r\n                InputLabelProps = {{\r\n                    classes: {outlined: classes.label}\r\n                }}\r\n                required\r\n                {...other}\r\n                autoFocus={true}\r\n            />\r\n        );\r\n    };\r\n\r\n    onChange = (event, { newValue, method }) => {\r\n        this.setState({\r\n            value: newValue.toString()\r\n        });\r\n    };\r\n\r\n    onSuggestionsFetchRequested = ({ value }) => {\r\n        if(value.length<2) return;\r\n\r\n        this.setState({\r\n            suggestions: this.getSuggestions(value)\r\n        });\r\n    };\r\n\r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n            suggestions: []\r\n        });\r\n    };\r\n\r\n    getSuggestionValue =  (suggestion) =>{\r\n        this.setState({selectedCustomer: suggestion});\r\n        this.setState({PO_number: suggestion.CustomerNo});\r\n        this.setState({franchiseeFromCustomer: suggestion.Franchisees});\r\n\r\n        let year = moment().year();\r\n        let month = moment().month();\r\n        let invoiceDate = moment().year(year).month(month).endOf('month');\r\n        let dueDate = moment().year(year).month(month).endOf('month').add(suggestion.PaymentTerm, 'days');\r\n\r\n        if(suggestion.InvoiceDayPreference==='BOM') {\r\n            invoiceDate = moment().year(year).month(month).startOf('month');\r\n            dueDate = moment().year(year).month(month).startOf('month').add(suggestion.PaymentTerm, 'days');\r\n        }\r\n\r\n        this.setState({InvoiceDate: invoiceDate.format('YYYY-MM-DD')});\r\n        this.setState({DueDate: dueDate.format('YYYY-MM-DD')});\r\n\r\n\r\n        return suggestion.CustomerName;\r\n    };\r\n\r\n    getSuggestions = (value) => {\r\n        const escapedValue = escapeRegexCharacters(value.trim());\r\n        const regex = new RegExp(escapedValue, 'i');\r\n        if(this.props.customers!==null)\r\n            return this.props.customers.filter(customer => regex.test(customer.CustomerName));\r\n    };\r\n\r\n    getTotal = () => {\r\n        if(this.state.selectedCustomer===null) return;\r\n\r\n        let subTotal = 0.0;\r\n        let markup = 0.0;\r\n        let tax = 0.0;\r\n\r\n        if(this.props.invoiceForm.data===null) return;\r\n\r\n        const data = [...this.props.invoiceForm.data.line];\r\n\r\n        data.forEach(n => {\r\n            subTotal += parseFloat(n.extended);\r\n            tax += parseFloat(n.tax);\r\n            markup += parseFloat(n.markupAmount)\r\n        });\r\n\r\n        if(this.state.selectedCustomer.TaxExempt!=='N') tax = 0;\r\n\r\n        this.setState({subTotal: subTotal});\r\n        this.setState({markup: markup});\r\n        this.setState({tax: tax});\r\n        this.setState({total: subTotal+tax+markup});\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        if(this.props.invoiceForm.data!==null && this.props.invoiceForm.data!== prevProps.invoiceForm.data) {\r\n            this.getTotal();\r\n        }\r\n        if(this.state.selectedCustomer!== null && JSON.stringify(this.state.selectedCustomer)!== JSON.stringify(this.props.invoiceForm.customer)) {\r\n            this.props.selectCustomer(this.state.selectedCustomer);\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.invoiceForm.customer!==null){\r\n            if(nextProps.invoiceForm.type==='edit') {\r\n                this.setState({InvoiceNo: nextProps.invoices.invoiceDetail.Data.inv_no});\r\n                this.setState({value: nextProps.invoiceForm.customer.CustomerName});\r\n                this.setState({PO_number: nextProps.invoiceForm.customer.CustomerNo});\r\n                this.setState({InvoiceDescription: nextProps.invoices.invoiceDetail.Data.Description});\r\n                this.setState({notes: nextProps.invoices.invoiceDetail.Data.Notes});\r\n                this.setState({InvoiceDate: moment(nextProps.invoices.invoiceDetail.Data.InvoiceDate).format('YYYY-MM-DD')});\r\n                this.setState({DueDate: moment(nextProps.invoices.invoiceDetail.Data.DueDate).format('YYYY-MM-DD')});\r\n            }\r\n        }\r\n\r\n        //in time of Saving\r\n        if(nextProps.newInvoice!==null && nextProps.newInvoice!==this.props.newInvoice){\r\n            this.setState({bAlertNewInvoice: false});\r\n            if(this.state.buttonOption===0){\r\n                this.props.updatedInvoices();\r\n                this.props.resetInvoiceForm();\r\n                this.setState({InvoiceDescription: ''});\r\n                this.setState({notes: ''});\r\n                this.setState({selectedCustomer: null});\r\n                this.setState({value: ''});\r\n                this.setState({CustomerNo: ''});\r\n                if(this.input) {\r\n                    if(this.props.invoiceForm.type === 'new')\r\n                        setTimeout(() => {this.input.focus()}, 500);\r\n                }\r\n            }\r\n            else if(this.state.buttonOption===1) {\r\n                this.props.updatedInvoices();\r\n                this.closeComposeForm();\r\n            }\r\n            else if(this.state.buttonOption===2) {\r\n                this.props.updatedInvoices();\r\n                this.closeComposeForm();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.input) {\r\n            if(this.props.invoiceForm.type === 'new')\r\n                setTimeout(() => {this.input.focus()}, 500);\r\n        }\r\n\r\n        if(this.props.invoices.invoiceDetail){\r\n            let invoiceDetail = this.props.invoices.invoiceDetail.Data;\r\n            let customer = this.props.customers.filter(customer => customer.CustomerName===invoiceDetail.CustomerName && customer.CustomerNo===invoiceDetail.CustomerNumber);\r\n            if(customer.length>0) {\r\n                this.setState({selectedCustomer: customer[0]});\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(_.set({...this.state}, event.target.name, event.target.type === 'checkbox' ? event.target.checked : event.target.value));\r\n    };\r\n\r\n    addNewInvoice = () => {\r\n        let inv_no = 'PENDING';\r\n        let items = [];\r\n        let lines = this.props.invoiceForm.data.line;\r\n        //\r\n        lines.forEach(line=>{\r\n            let item = {\r\n                Inv_No: inv_no,\r\n                ServiceTypeListId: 0,\r\n                Description: line.description,\r\n                Billing: line.billing.value,\r\n                Service: line.service.label,\r\n                LineNo: 1,\r\n                UnitPrice: parseFloat(line.amount),\r\n                Quantity: parseInt(line.quantity),\r\n                TaxRate: line.tax,\r\n                ExtendedPrice: line.extended,\r\n                Total: line.total,\r\n                MarkUpTotal: line.markup,\r\n                Commission: 0,\r\n                CommissionTotal: 0,\r\n                ExtraWork: 1,\r\n                TaxExcempt: this.state.selectedCustomer.TaxExempt,\r\n                Distribution: [],\r\n            };\r\n            let franchisees = [];\r\n\r\n            if(line.franchisees.length>0) {\r\n                line.franchisees.forEach(f=>{\r\n                    franchisees.push(\r\n                        {\r\n                            FranchiseeId: 12,\r\n                            FranchiseeNumber: f.fnumber,\r\n                            LineNo: 1,\r\n                            Name: f.name,\r\n                            Description: \"Work done\",\r\n                            Amount: f.amount\r\n                        }\r\n                    )\r\n                })\r\n            }\r\n            item.Distribution = franchisees;\r\n\r\n            items.push(item);\r\n        });\r\n\r\n        if(this.props.invoiceForm.type === 'edit') {\r\n\r\n        }\r\n\r\n        let result;\r\n\r\n        if(this.props.invoiceForm.type === 'new') {\r\n            result = {\r\n                Inv_No: inv_no,\r\n                Apply_to: 'Apply To',\r\n                CustomerId: this.state.selectedCustomer.CustomerId,\r\n                CustomerNumber: this.state.PO_number,\r\n                CustomerName: this.state.selectedCustomer.CustomerName,\r\n                PeriodId: this.props.invoices.PeriodId[0],\r\n                PeriodMonth: moment(this.state.period).month()+1,\r\n                PeriodYear: moment(this.state.period).year(),\r\n                Description: this.state.InvoiceDescription,\r\n                Notes: this.state.notes,\r\n                RegionId: this.props.regionId,\r\n                BillRunId: 999,\r\n                InvoiceDate: moment(this.state.InvoiceDate),\r\n                DueDate: moment(this.state.DueDate),\r\n                PONumber: this.state.PO_number,\r\n                CreatedById: this.props.user.UserId,\r\n                CreatedDate: this.props.invoiceForm.type === 'new' ? moment() : this.props.invoices.invoiceDetail.Data.CreatedDate,\r\n                SubTotal: this.state.subTotal,\r\n                MarkupAmountTotal :this.state.markup,\r\n                CPIIncrease: 0.00,\r\n                TaxTotal: this.state.tax,\r\n                GrandTotal: this.state.total,\r\n                TransactionStatusListId: 2,\r\n                Status: 2,\r\n                SysCust: this.state.selectedCustomer.SysCust,\r\n                Items: items\r\n            };\r\n            this.props.addInvoice(this.props.regionId, result);\r\n        }\r\n        else {\r\n            result = {\r\n                ...this.props.invoices.invoiceDetail.Data,\r\n                CustomerId: this.state.selectedCustomer.CustomerId,\r\n                CustomerNumber: this.state.PO_number,\r\n                CustomerName: this.state.selectedCustomer.CustomerName,\r\n                PeriodId: this.props.invoices.PeriodId[0],\r\n                PeriodMonth: moment(this.state.period).month()+1,\r\n                PeriodYear: moment(this.state.period).year(),\r\n                Description: this.state.InvoiceDescription,\r\n                Notes: this.state.notes,\r\n                RegionId: this.props.regionId,\r\n                InvoiceDate: moment(this.state.InvoiceDate),\r\n                DueDate: moment(this.state.DueDate),\r\n                PONumber: this.state.PO_number,\r\n                CreatedById: this.props.user.UserId,\r\n                CreatedDate: this.props.invoiceForm.type === 'new' ? moment() : this.props.invoices.invoiceDetail.Data.CreatedDate,\r\n                SubTotal: this.state.subTotal,\r\n                MarkupAmountTotal :this.state.markup,\r\n                TaxTotal: this.state.tax,\r\n                GrandTotal: this.state.total,\r\n                TransactionStatusListId: 2,\r\n                Status: 2,\r\n                Items: items\r\n            };\r\n\r\n            this.props.updateInvoice(this.props.invoices.invoiceDetail.Data._id, this.props.regionId, result);\r\n        }\r\n\r\n        console.log('result', JSON.stringify(result));\r\n    };\r\n\r\n    updateInvoice = () => {\r\n\r\n    };\r\n\r\n    validateNewInvoice = () => {\r\n        if(this.state.selectedCustomer===null){\r\n            this.setState({snackMessage: 'Please choose customer from Invoice suggestion'});\r\n            this.setState({openSnack: true});\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    onSaveInvoice = (buttonOption) => {\r\n        if(this.validateNewInvoice()){\r\n            this.setState({bAlertNewInvoice: true});\r\n            this.setState({buttonOption: buttonOption});\r\n        }\r\n    };\r\n\r\n    onSaveAndAddMore=()=>{\r\n        this.onSaveInvoice(0);\r\n    };\r\n\r\n    onSaveAndClose = () => {\r\n        this.onSaveInvoice(1);\r\n    };\r\n\r\n    onSubmitForApproval=()=>{\r\n        this.onSaveInvoice(2);\r\n    };\r\n\r\n\r\n    closeComposeForm = () => {\r\n        this.props.invoiceForm.type === 'edit' ? this.props.closeEditInvoiceForm() : this.props.closeNewInvoiceForm();\r\n    };\r\n\r\n    handleDueDateChange = date => {\r\n        this.setState({ DueDate: date});\r\n    };\r\n    handleInvoiceDateChange = date => {\r\n        this.setState({ InvoiceDate: date });\r\n    };\r\n\r\n    handlePeriodChange = date => {\r\n        this.setState({ period: date });\r\n    };\r\n\r\n    storeInputReference = autosuggest => {\r\n        if (autosuggest !== null) {\r\n            this.input = autosuggest.input;\r\n        }\r\n    };\r\n\r\n    handleCloseNewInvoice = ()=>{\r\n        this.setState({bAlertNewInvoice: false})\r\n    };\r\n\r\n\r\n    handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        this.setState({ openSnack: false });\r\n    };\r\n\r\n    focusDescriptionInputField = input => {\r\n        if ( input && this.props.invoiceForm.type === 'edit') {\r\n            setTimeout(() => {input.focus()}, 500);\r\n        }\r\n    };\r\n\r\n    render()\r\n    {\r\n        const { classes} = this.props;\r\n        const { value, suggestions } = this.state;\r\n\r\n        const today = new Date();\r\n\r\n        const autosuggestProps = {\r\n            renderInputComponent: this.renderInputComponent,\r\n            suggestions: suggestions,\r\n            onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\r\n            onSuggestionsClearRequested: this.onSuggestionsClearRequested,\r\n            getSuggestionValue: this.getSuggestionValue,\r\n            renderSuggestion,\r\n        };\r\n\r\n        let bReadonly = false;\r\n        if(this.props.invoiceForm.type === 'new') bReadonly = true;\r\n\r\n        return (\r\n            <FuseAnimate animation=\"transition.slideRightIn\" delay={300}>\r\n                <div className=\"h-full flex flex-col relative\">\r\n                    <div className=\"flex flex-col p-24 pt-12 pb-0\" style={{flex: \"1\"}}>\r\n                        <Grid container className={classNames(classes.formControl)}>\r\n                            <Grid item xs={12} sm={6} md={6} className=\"flex flex-row pr-16\">\r\n                                <Autosuggest\r\n                                    {...autosuggestProps}\r\n                                    inputProps={{\r\n                                        classes,\r\n                                        placeholder: 'Search Customer Name or Number',\r\n                                        value: value,\r\n                                        onChange: this.onChange,\r\n                                    }}\r\n                                    theme={{\r\n                                        container: classNames(classes.container),\r\n                                        suggestionsContainerOpen: classes.suggestionsContainerOpen,\r\n                                        suggestionsList: classes.suggestionsList,\r\n                                        suggestion: classes.suggestion,\r\n                                    }}\r\n                                    renderSuggestionsContainer={options => (\r\n                                        <Paper {...options.containerProps} square>\r\n                                            {options.children}\r\n                                        </Paper>\r\n                                    )}\r\n                                    ref={this.storeInputReference}\r\n                                />\r\n                            </Grid>\r\n                            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                <Grid item xs={12} sm={4} md={4} className=\"flex flex-row pl-16 pr-4\">\r\n                                    <DatePicker\r\n                                        margin=\"none\"\r\n                                        label=\"Period\"\r\n                                        name=\"InvoicePeriod\"\r\n                                        variant=\"outlined\"\r\n                                        format=\"MM/YYYY\"\r\n                                        className={classes.textField}\r\n                                        value={this.state.period}\r\n                                        onChange={this.handlePeriodChange}\r\n                                        fullWidth\r\n                                        required\r\n                                        InputProps={{\r\n                                            classes: {\r\n                                                input: classes.input,\r\n                                            },\r\n                                        }}\r\n                                        InputLabelProps = {{\r\n                                            shrink: true,\r\n                                            classes: {outlined: classes.label}\r\n                                        }}\r\n                                        openToYearSelection={true}\r\n                                    />\r\n                                    <TextField\r\n                                        margin=\"none\"\r\n                                        label=\"Invoice Date\"\r\n                                        name=\"InvoiceDate\"\r\n                                        type=\"date\"\r\n                                        variant=\"outlined\"\r\n                                        value={this.state.InvoiceDate}\r\n                                        onChange={this.handleChange}\r\n                                        fullWidth\r\n                                        required\r\n                                        className={classes.textField}\r\n                                        InputProps={{\r\n                                            classes: {\r\n                                                input: classes.input1,\r\n                                            },\r\n                                        }}\r\n                                        InputLabelProps = {{\r\n                                            shrink: true,\r\n                                            classes: {outlined: classes.label}\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        margin=\"none\"\r\n                                        label=\"Due Date\"\r\n                                        name=\"DueDate\"\r\n                                        type=\"date\"\r\n                                        variant=\"outlined\"\r\n                                        value={this.state.DueDate}\r\n                                        onChange={this.handleChange}\r\n                                        fullWidth\r\n                                        required\r\n                                        InputProps={{\r\n                                            classes: {\r\n                                                input: classes.input1,\r\n                                            },\r\n                                        }}\r\n                                        InputLabelProps = {{\r\n                                            shrink: true,\r\n                                            classes: {outlined: classes.label}\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={1} md={1} className=\"flex flex-row xs:flex-col xs:mb-24 pr-4 pl-4\" style={{display: 'none', padding: '0 6px!important'}}>\r\n                                    {/*<DatePicker*/}\r\n                                        {/*margin=\"none\"*/}\r\n                                        {/*label=\"Invoice Date\"*/}\r\n                                        {/*name=\"InvoiceDate\"*/}\r\n                                        {/*variant=\"outlined\"*/}\r\n                                        {/*format=\"MM/DD/YYYY\"*/}\r\n                                        {/*value={this.state.InvoiceDate}*/}\r\n                                        {/*onChange={this.handleInvoiceDateChange}*/}\r\n                                        {/*fullWidth*/}\r\n                                        {/*required*/}\r\n                                        {/*InputProps={{*/}\r\n                                            {/*classes: {*/}\r\n                                                {/*input: classes.input1,*/}\r\n                                            {/*},*/}\r\n                                        {/*}}*/}\r\n                                        {/*InputLabelProps = {{*/}\r\n                                            {/*shrink: true,*/}\r\n                                            {/*classes: {outlined: classes.label}*/}\r\n                                        {/*}}*/}\r\n                                    {/*/>*/}\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={1} md={1} className=\"flex flex-row xs:flex-col pr-4 pl-4\"\r\n                                      style={{padding: '0 6px!important', display: 'none'}}>\r\n                                    {/*<DatePicker*/}\r\n                                        {/*margin=\"none\"*/}\r\n                                        {/*label=\"Due Date\"*/}\r\n                                        {/*format=\"MM/DD/YYYY\"*/}\r\n                                        {/*name=\"DueDate\"*/}\r\n                                        {/*variant=\"outlined\"*/}\r\n                                        {/*value={this.state.DueDate}*/}\r\n                                        {/*onChange={this.handleDueDateChange}*/}\r\n                                        {/*required*/}\r\n                                        {/*fullWidth*/}\r\n                                        {/*InputProps={{*/}\r\n                                            {/*classes: {*/}\r\n                                                {/*input: classes.input1,*/}\r\n                                            {/*},*/}\r\n                                        {/*}}*/}\r\n                                        {/*InputLabelProps = {{*/}\r\n                                            {/*shrink: true,*/}\r\n                                            {/*classes: {outlined: classes.label}*/}\r\n                                        {/*}}*/}\r\n                                    {/*/>*/}\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                            <Grid item xs={12} sm={2} md={2} className=\"flex flex-row xs:flex-col pl-4\" >\r\n                                <TextField\r\n                                    margin=\"none\"\r\n                                    label=\"P.O #\"\r\n                                    placeholder=\"P.O #\"\r\n                                    InputProps={{\r\n                                        classes: {\r\n                                            input: classes.input,\r\n                                        },\r\n                                    }}\r\n                                    InputLabelProps = {{\r\n                                        shrink: true,\r\n                                        classes: {outlined: classes.label}\r\n                                    }}\r\n                                    name=\"PO_number\"\r\n                                    variant=\"outlined\"\r\n                                    value={this.state.PO_number}\r\n                                    onChange={this.handleChange}\r\n                                    required\r\n                                    fullWidth\r\n                                    style={{paddingRight: 4}}\r\n                                />\r\n                                <TextField\r\n                                    margin=\"none\"\r\n                                    label=\"Invoice #\"\r\n                                    placeholder=\"Invoice #\"\r\n                                    InputProps={{\r\n                                        readOnly: bReadonly,\r\n                                        classes: {\r\n                                            input: bReadonly? classes.inputOrange: classes.input,\r\n                                        },\r\n                                    }}\r\n                                    InputLabelProps = {{\r\n                                        shrink: true,\r\n                                        classes: {outlined: classes.label}\r\n                                    }}\r\n                                    name=\"InvoiceNo\"\r\n                                    variant=\"outlined\"\r\n                                    value={this.state.InvoiceNo}\r\n                                    onChange={this.handleChange}\r\n                                    required\r\n                                    fullWidth\r\n                                    style = {{paddingLeft: 4,fontSize: this.props.invoiceForm.type === 'new' ? '18px!important': 'inherit',\r\n                                        fontWeight: this.props.invoiceForm.type === 'new' ? 700: 'inherit'\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <GridContainer className={classNames(classes.formControl, \"mb-0\")}>\r\n                            <GridItem xs={12} sm={6} md={6} className=\"flex flex-row xs:flex-col\">\r\n                                <Card className={classes.card}>\r\n                                    <CardHeader title=\"Customer\" className={classNames(classes.cardHeader, \"flex-1\")} />\r\n                                    <CardContent className={classNames(classes.cardContent)}>\r\n                                        <div className=\"flex flex-row justify-between mb-4\">\r\n                                            <div className=\"flex flex-row\">\r\n                                                <Icon fontSize={\"small\"} className=\"mr-4\">account_circle</Icon>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                    <strong>{this.state.selectedCustomer ? this.state.selectedCustomer.CustomerName: this.state.value}</strong>\r\n                                                </Typography>\r\n                                            </div>\r\n                                            <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                <strong>Customer #: {this.state.selectedCustomer? this.state.selectedCustomer.CustomerNo: this.state.CustomerNo}</strong>\r\n                                            </Typography>\r\n                                        </div>\r\n                                        {this.state.selectedCustomer && (\r\n                                            <div className=\"flex flex-row justify-start mb-4\">\r\n                                                <div className=\"flex flex-row items-center\">\r\n                                                    <Icon fontSize={\"small\"} className=\"mr-4\">place</Icon>\r\n                                                    <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                        {this.state.selectedCustomer.Address}, {this.state.selectedCustomer.City}, {this.state.selectedCustomer.StateName} {this.state.selectedCustomer.PostalCode}\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                        {this.state.selectedCustomer && (\r\n                                            <div className=\"flex flex-row justify-between mb-4\">\r\n                                                <div className=\"flex flex-row items-center\">\r\n                                                    <Icon fontSize={\"small\"} className=\"mr-4\">smartphone</Icon>\r\n                                                    <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                        <NumberFormat value={this.state.selectedCustomer.Phone} displayType={'text'}  format=\"+1 (###) ###-####\" mask=\"_\" renderText={value => <div>{value}</div>} />\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </GridItem>\r\n                            <GridItem xs={12} sm={6} md={6} className= \"flex flex-row justify-end xs:flex-col\">\r\n                                <Card className={classes.card}>\r\n                                    <CardHeader title=\"Billing\" className={classNames(classes.cardHeader, \"flex-1\")} />\r\n                                    <CardContent className={classNames(classes.cardContent)}>\r\n                                        <div className=\"flex flex-row justify-between mb-4\">\r\n                                            <div className=\"flex flex-row\">\r\n                                                <Icon fontSize={\"small\"} className=\"mr-4\">account_circle</Icon>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                    <strong>{this.state.selectedCustomer ? this.state.selectedCustomer.BillingCustomerName: this.state.value}</strong>\r\n                                                </Typography>\r\n                                            </div>\r\n                                        </div>\r\n                                        {this.state.selectedCustomer && (\r\n                                            <div className=\"flex flex-row justify-start mb-4\">\r\n                                                <div className=\"flex flex-row items-center\">\r\n                                                    <Icon fontSize={\"small\"} className=\"mr-4\">place</Icon>\r\n                                                    <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                        {this.state.selectedCustomer.BillingAddress}, {this.state.selectedCustomer.BillingCity}, {this.state.selectedCustomer.BillingState} {this.state.selectedCustomer.BillingPostalCode}\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                        {this.state.selectedCustomer && (\r\n                                            <div className=\"flex flex-row justify-between mb-4\">\r\n                                                <div className=\"flex flex-row items-center\">\r\n                                                    <Icon fontSize={\"small\"} className=\"mr-4\">smartphone</Icon>\r\n                                                    <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                        <NumberFormat value={this.state.selectedCustomer.Phone} displayType={'text'}  format=\"+1 (###) ###-####\" mask=\"_\" renderText={value => <div>{value}</div>} />\r\n                                                    </Typography>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <FormControlLabel\r\n                                                        control={\r\n                                                            <Checkbox\r\n                                                                name=\"taxExempt\"\r\n                                                                checked={this.state.selectedCustomer.TaxExempt==='Y' ? true : false}\r\n                                                                onChange={this.handleChange}\r\n                                                                value=\"checkedB\"\r\n                                                                color=\"primary\"\r\n                                                                className=\"p-0\"\r\n                                                                disabled\r\n                                                            />\r\n                                                        }\r\n                                                        label=\"Tax Exempt\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </GridItem>\r\n                        </GridContainer>\r\n                        <div className=\"w-full mt-4\">\r\n                            <TextField\r\n                                id=\"InvoiceDescription\"\r\n                                name=\"InvoiceDescription\"\r\n                                label=\"Description\"\r\n                                className={classes.textField}\r\n                                value={this.state.InvoiceDescription}\r\n                                onChange={this.handleChange}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputLabelProps = {{\r\n                                    shrink: true,\r\n                                    classes: {outlined: classes.label}\r\n                                }}\r\n                                InputProps={{\r\n                                    classes: {\r\n                                        input: classes.input, multiline: classes.input\r\n                                    },\r\n                                }}\r\n                                inputRef={this.focusDescriptionInputField}\r\n                            />\r\n                        </div>\r\n                        <Grid container className={classNames(classes.formControl)} style={{flex: \"9999 1 0\"}}>\r\n                            <Grid item xs={12} sm={12} md={12} className=\"flex flex-row xs:flex-col xs:mb-24\">\r\n                                <InvoiceLineTable fn={this.state.franchiseeFromCustomer}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider variant=\"middle\"/>\r\n                    </div>\r\n                    <div className=\"flex flex-shrink flex-col w-full pl-24 pr-24 pt-0 pb-12\">\r\n                        <GridContainer style={{alignItems: 'center'}} className={classNames(classes.formControl)}>\r\n                            <GridItem xs={12} sm={9} md={9} className=\"flex flex-col xs:flex-col xs:mb-24\">\r\n                                <div className=\"w-full\">\r\n                                    <TextField\r\n                                        id=\"notes\"\r\n                                        name=\"notes\"\r\n                                        label=\"Note\"\r\n                                        className={classes.textField}\r\n                                        value={this.state.notes}\r\n                                        onChange={this.handleChange}\r\n                                        margin=\"dense\"\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        multiline\r\n                                        InputLabelProps = {{\r\n                                            shrink: true,\r\n                                            classes: {outlined: classes.label}\r\n                                        }}\r\n                                        InputProps={{\r\n                                            classes: {\r\n                                                input: classes.input, multiline: classes.input\r\n                                            },\r\n                                        }}\r\n                                        rows={3}\r\n                                    />\r\n                                </div>\r\n                            </GridItem>\r\n                            <GridItem xs={12} sm={3} md={3} className=\"flex flex-col xs:flex-col xs:mb-24\">\r\n                                <div className=\"w-full p-12 flex justify-end pb-0\">\r\n                                    <span className={classes.summary}><strong>Subtotal: </strong>${this.state.subTotal.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}</span>\r\n                                </div>\r\n                                <div className=\"w-full p-12 flex justify-end pb-0 pt-6 \">\r\n                                    <span className={classes.summary}><strong>Markup Total: </strong>${this.state.markup.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}</span>\r\n                                </div>\r\n                                <div className=\"w-full p-12 flex justify-end pt-6 pb-6\">\r\n                                    <span className={classes.summary}><strong>Tax: </strong>${this.state.tax.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}</span>\r\n                                </div>\r\n                                <div className=\"w-full p-12 flex justify-end  pt-6 pb-6\">\r\n                                    <span className={classes.summary}><strong>Grand Total: </strong>${this.state.total.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}</span>\r\n                                </div>\r\n                            </GridItem>\r\n                        </GridContainer>\r\n                        <div className=\"flex flex-1 flex-row justify-between items-center\">\r\n                            <div className=\"flex flex-row justify-start\">\r\n                                <FuseAnimate animation=\"transition.expandIn\" delay={300}>\r\n                                    <span className={classes.summary}><strong>Created By: </strong>{`${this.props.user.firstName} ${this.props.user.lastName}, ${moment(today).format('MM/DD/YYYY')}`}</span>\r\n                                </FuseAnimate>\r\n                            </div>\r\n                            <div className=\"flex flex-1 flex-row justify-end\">\r\n                                <FuseAnimate animation=\"transition.expandIn\" delay={300}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classNames(classes.button, \"mr-12\")}\r\n                                        onClick={() => {\r\n                                            this.onSaveAndAddMore();\r\n                                        }}\r\n                                    >\r\n                                        { this.props.invoiceForm.type === 'new' && (\r\n                                            <span>Save & Add more</span>\r\n                                        )}\r\n                                        { this.props.invoiceForm.type === 'edit' && (\r\n                                            <span>Update & Add more</span>\r\n                                        )}\r\n                                    </Button>\r\n                                </FuseAnimate>\r\n                                <FuseAnimate animation=\"transition.expandIn\" delay={300}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classNames(classes.button, \"mr-12\")}\r\n                                        onClick={() => {\r\n                                            this.onSaveAndClose();\r\n                                        }}\r\n                                    >\r\n                                        { this.props.invoiceForm.type === 'new' && (\r\n                                            <span>Save & Close</span>\r\n                                        )}\r\n                                        { this.props.invoiceForm.type !== 'new' && (\r\n                                            <span>Update & Close</span>\r\n                                        )}\r\n                                    </Button>\r\n                                </FuseAnimate>\r\n                                <FuseAnimate animation=\"transition.expandIn\" delay={300}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classNames(classes.button, \"mr-12\")}\r\n                                        onClick={() => {\r\n                                            this.onSubmitForApproval();\r\n                                        }}\r\n                                    >\r\n                                        Submit for Approval\r\n                                    </Button>\r\n                                </FuseAnimate>\r\n                                <FuseAnimate animation=\"transition.expandIn\" delay={300}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        onClick={() => {\r\n                                            this.closeComposeForm();\r\n                                        }}\r\n                                    >\r\n                                        Close\r\n                                    </Button>\r\n                                </FuseAnimate>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Snackbar\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'left',\r\n                        }}\r\n                        open={this.state.openSnack}\r\n                        autoHideDuration={3000}\r\n                        onClose={this.handleClose}\r\n                    >\r\n                        <MySnackbarContentWrapper\r\n                            onClose={this.handleClose}\r\n                            variant=\"error\"\r\n                            message={this.state.snackMessage}\r\n                        />\r\n                    </Snackbar>\r\n                    <Dialog\r\n                        open={this.state.bAlertNewInvoice}\r\n                        onClose={()=>this.handleCloseNewInvoice()}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\">\r\n                            {this.props.invoiceForm.type === 'new' && (\r\n                                <span>Create New Invoice</span>\r\n                            )}\r\n                            {this.props.invoiceForm.type === 'edit' && (\r\n                                <span>Update The Invoice</span>\r\n                            )}\r\n\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText id=\"alert-dialog-description\">\r\n                                {this.props.invoiceForm.type === 'new' && (\r\n                                    <span>Do you really want to insert the new invoice?</span>\r\n                                )}\r\n                                {this.props.invoiceForm.type !== 'new' && (\r\n                                    <span>Do you really want to update the invoice?</span>\r\n                                )}\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={()=>this.handleCloseNewInvoice()} color=\"primary\">\r\n                                Close\r\n                            </Button>\r\n                            <Button onClick={()=>this.addNewInvoice()} color=\"primary\" autoFocus>\r\n                                {this.props.invoiceForm.type === 'new' && (<span>Create</span>)}\r\n                                {this.props.invoiceForm.type === 'edit' && (<span>Update</span>)}\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </div>\r\n            </FuseAnimate>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch)\r\n{\r\n    return bindActionCreators({\r\n        openEditInvoiceForm: Actions.openEditInvoiceForm,\r\n        closeEditInvoiceForm: Actions.closeEditInvoiceForm,\r\n        closeNewInvoiceForm : Actions.closeNewInvoiceForm,\r\n        selectCustomer: Actions.selectCustomer,\r\n        resetInvoiceForm: Actions.resetInvoiceForm,\r\n        addInvoice: Actions.addInvoice,\r\n        updateInvoice: Actions.updateInvoice,\r\n        updatedInvoices: Actions.updatedInvoices,\r\n    }, dispatch);\r\n}\r\n\r\nfunction mapStateToProps({invoices, auth, franchisees})\r\n{\r\n    return {\r\n        invoiceForm: invoices.invoiceForm,\r\n        invoices: invoices,\r\n        newInvoice: invoices.newInvoice,\r\n        user: auth.login,\r\n        regionId: auth.login.defaultRegionId,\r\n        bStartingSaveFormData: invoices.bStartingSaveFormData,\r\n        franchisees: franchisees.franchiseesDB,\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(withRouter(connect(mapStateToProps, mapDispatchToProps)(InvoiceForm)));\r\n"],"sourceRoot":""}